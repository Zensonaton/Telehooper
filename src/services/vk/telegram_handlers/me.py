# coding: utf-8

from aiogram import F, Router, types
from aiogram.filters import Text
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from api import TelehooperAPI
from services.service_api_base import ServiceDisconnectReason


router = Router()

@router.callback_query(Text("/me vk"), F.message.as_("msg"))
async def me_vk_inline_handler(query: types.CallbackQuery, msg: types.Message) -> None:
	"""
	Inline Callback Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/me`.

	–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Å–µ—Ä–≤–∏—Å–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.
	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–Ω–æ–ø–∫–∏ "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ" –≤ –∫–æ–º–∞–Ω–¥–µ `/me`.
	"""

	assert msg.from_user

	user = await TelehooperAPI.get_user(query.from_user)

	keyboard = InlineKeyboardMarkup(
		inline_keyboard=[
			[
				InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="/me"),
			],

			[
				InlineKeyboardButton(text="üîë –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω", callback_data="/me vk multitokens"),
				InlineKeyboardButton(text="‚õîÔ∏è –û—Ç–∫–ª—é—á–∏—Ç—å –æ—Ç –±–æ—Ç–∞", callback_data="/me vk disconnect"),
			]
		]
	)

	id = user.connections["VK"]["ID"]
	full_name = user.connections["VK"]["FullName"]
	domain = user.connections["VK"]["Username"]

	await msg.edit_text(
		"<b>üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å ‚Äî –í–ö–æ–Ω—Ç–∞–∫—Ç–µ</b>.\n"
		"\n"
		"–í—ã —É–ø—Ä–∞–≤–ª—è–µ—Ç–µ —ç—Ç–æ–π –í–ö–æ–Ω—Ç–∞–∫—Ç–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞:\n"
		f" ‚Ä¢ <b>–°—Ç—Ä–∞–Ω–∏—Ü–∞</b>: {full_name} (<a href=\"vk.com/{domain}\">@{domain}</a>, ID {id}).\n"
		"\n"
		"–î–∏–∞–ª–æ–≥–æ–≤ –∏ –≥—Ä—É–ø–ø –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –≤ –±–æ—Ç–µ ‚Äî 3 —à—Ç—É–∫(-–∏):\n" # TODO: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
		" ‚Ä¢ <b>–ò–º—è –§–∞–º–∏–ª–∏—è</b>: <a href=\"vk.com/id1\">–ì—Ä—É–ø–ø–∞</a>.\n"
		" ‚Ä¢ <b>–ò–º—è –§–∞–º–∏–ª–∏—è</b>: <a href=\"vk.com/id1\">–ì—Ä—É–ø–ø–∞</a>.\n"
		" ‚Ä¢ <b>–í–ö–æ–Ω—Ç–∞–∫—Ç–µ API</b>: <a href=\"vk.com/club1\">–ö–∞–Ω–∞–ª</a>.\n",
		reply_markup=keyboard,
		disable_web_page_preview=True
	)

@router.callback_query(Text("/me vk multitokens"), F.message.as_("msg"))
async def me_vk_multitokens_inline_handler(query: types.CallbackQuery, msg: types.Message) -> None:
	"""
	Inline Callback Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/me`.

	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω" –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.
	"""

	keyboard = InlineKeyboardMarkup(
		inline_keyboard=[
			[
				InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="/me vk"),
				InlineKeyboardButton(text="üîù –í –Ω–∞—á–∞–ª–æ", callback_data="/me"),
			],
		]
	)

	await msg.edit_text(
		"–î–∞–Ω–Ω–∞—è –æ–ø—Ü–∏—è –µ—â—ë –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
		reply_markup=keyboard,
		disable_web_page_preview=True
	)

@router.callback_query(Text("/me vk disconnect"), F.message.as_("msg"))
async def me_vk_disconnect_inline_handler(query: types.CallbackQuery, msg: types.Message) -> None:
	"""
	Inline Callback Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/me`.

	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–∫–ª—é—á–∏—Ç—å –æ—Ç –±–æ—Ç–∞" –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.
	"""

	user = await TelehooperAPI.get_user(query.from_user)

	keyboard = InlineKeyboardMarkup(
		inline_keyboard=[
			[
				InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="/me vk"),
				InlineKeyboardButton(text="üîù –í –Ω–∞—á–∞–ª–æ", callback_data="/me"),
			],

			[
				InlineKeyboardButton(text="‚õîÔ∏è –î–∞, –æ—Ç–∫–ª—é—á–∏—Ç—å", callback_data="/me vk disconnect confirm"),
			]
		]
	)

	await msg.edit_text(
		"<b>‚õîÔ∏è –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ</b>.\n"
		"\n"
		f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É ¬´{user.connections['VK']['FullName']}¬ª –æ—Ç Telehooper?\n"
		"\n"
		"‚ö†Ô∏è –û—Ç–∫–ª—é—á–∏–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—É, Telehooper –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.\n",
		reply_markup=keyboard
	)

@router.callback_query(Text("/me vk disconnect confirm"), F.message.as_("msg"))
async def me_vk_disconnect_confirm_inline_handler(query: types.CallbackQuery, msg: types.Message) -> None:
	"""
	Inline Callback Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/me`.

	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–∞, –æ—Ç–∫–ª—é—á–∏—Ç—å" –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.
	"""

	user = await TelehooperAPI.get_user(query.from_user)
	vkService = user.get_vk_connection()

	assert vkService

	await vkService.disconnect_service(ServiceDisconnectReason.INITIATED_BY_USER)

	keyboard = InlineKeyboardMarkup(
		inline_keyboard=[
			[
				InlineKeyboardButton(text="üîù –í –Ω–∞—á–∞–ª–æ", callback_data="/me"),
			],
		]
	)

	await msg.edit_text(
		"<b>‚õîÔ∏è –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ</b>.\n"
		"\n"
		f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´{user.connections['VK']['FullName']}¬ª –±—ã–ª–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –æ—Ç Telehooper.\n"
		"\n"
		"‚ÑπÔ∏è –í—ã –º–æ–∂–µ—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è, –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /connect.\n",
		reply_markup=keyboard
	)
