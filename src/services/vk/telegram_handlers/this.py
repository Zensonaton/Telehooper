# coding: utf-8

import asyncio
from typing import cast

from aiogram import F, Router, types, Bot
from aiogram.filters import Text
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, BotCommand, BotCommandScopeChatAdministrators
from services.vk.consts import VK_GROUP_DIALOGUE_COMMANDS

import utils
from api import TelehooperAPI


router = Router()

DIALOGUES_PER_PAGE = 10

@router.callback_query(Text("/this vk"), F.message.as_("msg"))
async def this_vk_inline_handler(query: types.CallbackQuery, msg: types.Message) -> None:
	"""
	Inline Callback Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/this`.

	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–Ω–æ–ø–∫–∏ "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ" –≤ –∫–æ–º–∞–Ω–¥–µ `/this`.
	"""

	keyboard = InlineKeyboardMarkup(inline_keyboard=[
		[InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="/this")],

		[InlineKeyboardButton(text="üí¨ –°–æ–æ–±—â–µ–Ω–∏—è –∏ –æ–±—â–∞—Ç—å—Å—è", callback_data="/this vk messages")],
		[InlineKeyboardButton(text="[wip] üóû –ù–æ–≤–æ—Å—Ç–∏/–ø–æ—Å—Ç—ã –∏–∑ –≥—Ä—É–ø–ø", callback_data="/this vk posts")],
	])

	await msg.edit_text(
		"<b>ü´Ç –ì—Ä—É–ø–ø–∞-–¥–∏–∞–ª–æ–≥ ‚Äî –í–ö–æ–Ω—Ç–∞–∫—Ç–µ</b>.\n"
		"\n"
		"–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, –í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å —Å–æ–µ–¥–∏–Ω–∏—Ç—å –¥–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É Telegram —Å —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º –ª–∏–±–æ –∂–µ –¥–∏–∞–ª–æ–≥–æ–º –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.\n"
		"–û—Ç–≤–µ—Ç–∏–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –±–æ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç, –∫–∞–∫—É—é —Ä–æ–ª—å –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥–∞–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞.\n"
		"\n"
		"<b>‚ùì –ß—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ</b>?",
		reply_markup=keyboard
	)

@router.callback_query(Text("/this vk messages"), F.message.as_("msg"))
async def this_vk_messages_inline_handler(query: types.CallbackQuery, msg: types.Message) -> None:
	"""
	Inline Callback Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/this`.

	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–Ω–æ–ø–∫—É "–•–æ—á—É –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ–±—â–∞—Ç—å—Å—è" –≤ –∫–æ–º–∞–Ω–¥–µ `/this`.
	"""

	keyboard = InlineKeyboardMarkup(inline_keyboard=[
		[InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="/this vk")],

		# [InlineKeyboardButton(text="üë• Telegram-–≥—Ä—É–ø–ø–∞ –¥–ª—è –≤—Å–µ—Ö —á–∞—Ç–æ–≤ –í–ö", callback_data="do-nothing")],
		[InlineKeyboardButton(text="üë§ –û–¥–∏–Ω —á–∞—Ç –í–ö - –æ–¥–Ω–∞ Telegram-–≥—Ä—É–ø–ø–∞", callback_data="/this vk messages separated selection")],
	])

	await msg.edit_text(
		"<b>ü´Ç –ì—Ä—É–ø–ø–∞-–¥–∏–∞–ª–æ–≥ ‚Äî –í–ö–æ–Ω—Ç–∞–∫—Ç–µ ‚Äî —Å–æ–æ–±—â–µ–Ω–∏—è</b>.\n"
		"\n"
		"–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –ø–æ–ª—É—á–∞—Ç—å <b>—Å–æ–æ–±—â–µ–Ω–∏—è</b> –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ. –ï—Å–ª–∏ –í—ã –æ—à–∏–±–ª–∏—Å—å —Å –≤—ã–±–æ—Ä–æ–º, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–Ω–∞–∑–∞–¥¬ª.\n"
		"–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
		"\n"
		"<b>‚ùì –ö–∞–∫ –í–∞–º –±—É–¥–µ—Ç —É–¥–æ–±–Ω–æ –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è</b>?\n"
		"\n"
		"‚ÑπÔ∏è –í—ã –Ω–µ —Å–æ–∑–¥–∞–ª–∏ ¬´–æ–±—â—É—é¬ª –≥—Ä—É–ø–ø—É –≤ Telegram, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–±—Ä–∞—Ç—å ¬´Telegram-–≥—Ä—É–ø–ø–∞ –¥–ª—è –≤—Å–µ—Ö —á–∞—Ç–æ–≤¬ª. –ë–µ–∑ —Ç–∞–∫–æ–π –≥—Ä—É–ø–ø—ã Telehooper –Ω–µ —Å–º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –Ω–æ–≤—ã—Ö –ª—é–¥–µ–π.", # TODO: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —ç—Ç–æ.
		reply_markup=keyboard
	)

@router.callback_query(Text("/this vk posts"), F.message.as_("msg"))
async def this_vk_posts_inline_handler(query: types.CallbackQuery, msg: types.Message) -> None:
	"""
	Inline Callback Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/this`.

	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–Ω–æ–ø–∫—É "–•–æ—á—É —á–∏—Ç–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏/–ø–æ—Å—Ç—ã –∏–∑ –≥—Ä—É–ø–ø" –≤ –∫–æ–º–∞–Ω–¥–µ `/this`.
	"""

	keyboard = InlineKeyboardMarkup(inline_keyboard=[
		[InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="/this vk")],

		# [InlineKeyboardButton(text="üóû –í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ –≤ –æ–¥–Ω–æ–π Telegram-–≥—Ä—É–ø–ø–µ", callback_data="do-nothing")],
		# [InlineKeyboardButton(text="ü´Ç –û–¥–Ω–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –í–ö - –æ–¥–Ω–∞ Telegram-–≥—Ä—É–ø–ø–∞", callback_data="do-nothing")],
	])

	await msg.edit_text(
		"<b>ü´Ç –ì—Ä—É–ø–ø–∞-–¥–∏–∞–ª–æ–≥ ‚Äî –í–ö–æ–Ω—Ç–∞–∫—Ç–µ ‚Äî –ø–æ—Å—Ç—ã/–Ω–æ–≤–æ—Å—Ç–∏</b>.\n"
		"\n"
		"–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –ø–æ–ª—É—á–∞—Ç—å <b>–ø–æ—Å—Ç—ã –∏–ª–∏ –Ω–æ–≤–æ—Å—Ç–∏</b> –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ. –ï—Å–ª–∏ –í—ã –æ—à–∏–±–ª–∏—Å—å —Å –≤—ã–±–æ—Ä–æ–º, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–Ω–∞–∑–∞–¥¬ª.\n"
		"–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
		"\n"
		"<b>‚ùì –ö–∞–∫ –∏–º–µ–Ω–Ω–æ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ—Å—Ç—ã –∏–ª–∏ –Ω–æ–≤–æ—Å—Ç–∏</b>?",
		reply_markup=keyboard
	)

@router.callback_query(Text(startswith="/this vk messages separated"), F.message.as_("msg"))
async def this_vk_messages_separated_inline_handler(query: types.CallbackQuery, msg: types.Message) -> None:
	"""
	Inline Callback Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/this`.

	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–•–æ—á—É —á–∏—Ç–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏/–ø–æ—Å—Ç—ã –∏–∑ –≥—Ä—É–ø–ø" –≤ –∫–æ–º–∞–Ω–¥–µ `/this`.
	"""

	# TODO: –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞—Ç—å —é–∑–µ—Ä—É –≤ –í–ö —á–µ—Ä–µ–∑ –Ω–∏–∫–Ω–µ–π–º/—Å—Å—ã–ª–∫—É.

	assert msg.from_user
	assert query.data

	user = await TelehooperAPI.get_user(query.from_user)
	vkServiceAPI = user.get_vk_connection()
	assert vkServiceAPI is not None, "–°–µ—Ä–≤–∏—Å –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

	is_forced_update = cast(str, query.data).endswith("forced")
	will_load_chats = is_forced_update or not vkServiceAPI.has_cached_list_of_dialogues()

	if will_load_chats:
		loading_buttons = []
		for i in range(DIALOGUES_PER_PAGE):
			loading_buttons.append([InlineKeyboardButton(text="‚è≥ –∑–∞–≥—Ä—É–∑–∫–∞...", callback_data="do-nothing")])

		keyboard = InlineKeyboardMarkup(inline_keyboard=[
			[InlineKeyboardButton(text="„Ö§", callback_data="do-nothing")],

			*loading_buttons,

			[InlineKeyboardButton(text="„Ö§", callback_data="do-nothing")]
		])

		await msg.edit_text(
			"<b>ü´Ç –ì—Ä—É–ø–ø–∞-–¥–∏–∞–ª–æ–≥ ‚Äî –í–ö–æ–Ω—Ç–∞–∫—Ç–µ ‚Äî —Å–æ–æ–±—â–µ–Ω–∏—è</b>.\n"
			"\n"
			"–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é –≥—Ä—É–ø–ø—É –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —á–∞—Ç–∞ –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ. –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —á–∞—Ç–∞, –±–æ—Ç —Å–¥–µ–ª–∞–µ—Ç –¥–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É –ø–æ—Ö–æ–∂–µ–π –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.\n"
			"\n"
			"<i>‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤...</i>",
			reply_markup=keyboard
		)

	# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–∏–∞–ª–æ–≥–æ–≤, –∞ —Ç–∞–∫ –∂–µ —Å–ø–∏–º —á—Ç–æ –±—ã –±–æ—Ç "—Ä–∞–±–æ—Ç–∞–ª" 5 —Å–µ–∫—É–Ω–¥,
	# –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –º–æ–≥–ª–∏ —É–∂ —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–∏–∞–ª–æ–≥–æ–≤,
	# –Ω–∞–≥—Ä—É–∂–∞—è –±–æ—Ç–∞, –∞ —Ç–∞–∫ –∂–µ API –í–ö–æ–Ω—Ç–∞–∫—Ç–µ, –ø–æ–≤—ã—à–∞—è —à–∞–Ω—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ captcha.
	start_time = asyncio.get_running_loop().time()
	dialogues = await vkServiceAPI.get_list_of_dialogues(
		retrieve_all=True,
		force_update=is_forced_update,
		skip_ids=[
			vkServiceAPI.service_user_id
		]
	)
	if will_load_chats:
		await asyncio.sleep(5 - (asyncio.get_running_loop().time() - start_time))

	# –°–æ–∑–¥–∞—ë–º –∫—É—á–∫—É –∫–Ω–æ–ø–æ–∫ –ø–æ–¥ –¥–∏–∞–ª–æ–≥–∏.
	dialogues_kbd = []

	total_dialogues = len(dialogues)
	last_page = total_dialogues // DIALOGUES_PER_PAGE + 1

	current_page = 1
	if "page" in (query.data or ""):
		current_page = utils.clamp(
			int(query.data.split(" ")[-1]),
			1,
			last_page
		)


	for dialogue in dialogues[(current_page - 1) * DIALOGUES_PER_PAGE : current_page * DIALOGUES_PER_PAGE]:
		prefix = "üë•" if dialogue.is_multiuser else ""
		name = dialogue.name
		postfix = f"{'üìå' if dialogue.is_pinned else ''} {'üîï' if dialogue.is_muted else ''}"

		dialogues_kbd.append([
			InlineKeyboardButton(
				text=f"{prefix}  {name}  {postfix}", callback_data=f"/this vk convert {dialogue.id} messages separated"
			)
		])

	# –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–∏–∞–ª–æ–≥–∞–º–∏.
	keyboard = InlineKeyboardMarkup(inline_keyboard=[
		[
			InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="/this vk messages"),
			InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="/this vk messages separated forced"),
		],

		*dialogues_kbd,

		[
			InlineKeyboardButton(text="‚è™", callback_data="do-nothing" if current_page == 1 else "/this vk messages separated page 1"),
			InlineKeyboardButton(text="‚óÄÔ∏è", callback_data="do-nothing" if current_page == 1 else f"/this vk messages separated page {current_page - 1}"),
			InlineKeyboardButton(text=f"{current_page} / {last_page}", callback_data="do-nothing"),
			InlineKeyboardButton(text="‚ñ∂Ô∏è", callback_data="do-nothing" if current_page == last_page else f"/this vk messages separated page {current_page + 1}"),
			InlineKeyboardButton(text="‚è©", callback_data="do-nothing" if current_page == last_page else f"/this vk messages separated page {last_page}"),
		] if total_dialogues > DIALOGUES_PER_PAGE else [],
	])

	await msg.edit_text(
		"<b>ü´Ç –ì—Ä—É–ø–ø–∞-–¥–∏–∞–ª–æ–≥ ‚Äî –í–ö–æ–Ω—Ç–∞–∫—Ç–µ ‚Äî —Å–æ–æ–±—â–µ–Ω–∏—è</b>.\n"
		"\n"
		"–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é –≥—Ä—É–ø–ø—É –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —á–∞—Ç–∞ –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ. –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —á–∞—Ç–∞, –±–æ—Ç —Å–¥–µ–ª–∞–µ—Ç –¥–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É –ø–æ—Ö–æ–∂–µ–π –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.\n"
		f"–í—Å–µ–≥–æ —á–∞—Ç–æ–≤ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ —É –í–∞—Å ‚Äî {total_dialogues} —à—Ç—É–∫.\n"
		"\n"
		"‚ÑπÔ∏è –ù—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É —Å –∫–æ—Ç–æ—Ä—ã–º –µ—â—ë –Ω–∏ —Ä–∞–∑—É –Ω–µ –æ–±—â–∞–ª–∏—Å—å? –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É/–Ω–∏–∫–Ω–µ–π–º —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ —Å—é–¥–∞.",
		reply_markup=keyboard
	)

@router.callback_query(Text(startswith="/this vk convert"), F.message.as_("msg"))
async def this_vk_convert_inline_handler(query: types.CallbackQuery, msg: types.Message) -> None:
	"""
	Inline Callback Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/this`.

	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –≤—ã–±–æ—Ä–µ –¥–∏–∞–ª–æ–≥–∞/–≥—Ä—É–ø–ø—ã –≤ –∫–æ–º–∞–Ω–¥–µ `/this` –¥–ª—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.
	"""

	assert query.data

	splitted = query.data.split()

	chat_id = int(splitted[3])
	is_messages = "messages" in splitted
	is_separated = "separated" in splitted

	assert is_messages
	assert is_separated

	user = await TelehooperAPI.get_user(query.from_user)
	group = await TelehooperAPI.get_group(msg.chat)
	vkServiceAPI = user.get_vk_connection()
	bot = Bot.get_current()

	assert group is not None, "–ì—Ä—É–ø–ø–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
	assert vkServiceAPI is not None, "–°–µ—Ä–≤–∏—Å –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
	assert bot is not None, "Telegram-–±–æ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

	dialog = await vkServiceAPI.get_dialogue(chat_id)

	assert dialog is not None, "–î–∏–∞–ª–æ–≥ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

	await msg.edit_text(
		"<b>ü´Ç –ì—Ä—É–ø–ø–∞-–¥–∏–∞–ª–æ–≥ ‚Äî –í–ö–æ–Ω—Ç–∞–∫—Ç–µ ‚Äî —Å–æ–æ–±—â–µ–Ω–∏—è</b>.\n"
		"\n"
		f"–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ —á–∞—Ç —Å ¬´{dialog.name}¬ª.\n"
		"–î–æ–∂–¥–∏—Ç–µ—Å—å, –ø–æ–∫–∞ Telehooper —Å–¥–µ–ª–∞–µ—Ç —Å–≤–æ—é –º–∞–≥–∏—é... üëÄ\n"
		"\n"
		"<i>‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ Telehooper –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—É—é Telegram-–≥—Ä—É–ø–ø—É –≤ –ø–æ—Ö–æ–∂–∏–π –¥–∏–∞–ª–æ–≥ –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ...</i>"
	)

	# TODO: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞ —É –±–æ—Ç–∞.
	# TODO: –ü—Ä–∞–≤–∞ –Ω–∞ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞ —É —é–∑–µ—Ä–∞?
	# TODO: –°–¥–µ–ª–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É, –∞ —Ç–∞–∫ –∂–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∑–∞–∫—Ä–µ–ø–∞ –∏–∑ –¥–∏–∞–ª–æ–≥–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ, —Å–¥–µ–ª–∞–≤ –µ–≥–æ –∑–∞–∫—Ä–µ–ø–æ–º –≤ Telegram.

	await asyncio.sleep(3)
	await group.convert_to_dialogue_group(user, dialog, msg)

	# –ò–∑–º–µ–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥.
	await bot.set_my_commands(
		commands=[
			BotCommand(
				command=command,
				description=description
			) for command, description in VK_GROUP_DIALOGUE_COMMANDS.items()
		],
		scope=BotCommandScopeChatAdministrators(
			type="chat_administrators",
			chat_id=msg.chat.id
		)
	)

	await asyncio.sleep(2)
	await msg.answer(
		"<b>‚úÖ –ì—Ä—É–ø–ø–∞-–¥–∏–∞–ª–æ–≥ ‚Äî —É—Å–ø–µ—Ö</b>.\n"
		"\n"
		"Telehooper —É—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–ª –¥–∞–Ω–Ω—É—é Telegram-–≥—Ä—É–ø–ø—É –≤ –¥–∏–∞–ª–æ–≥ –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.\n"
		f"–¢–µ–ø–µ—Ä—å, –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å—é–¥–∞, –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ –¥–∏–∞–ª–æ–≥ ¬´{dialog.name}¬ª –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç.\n"
		"\n"
		"–û–¥–Ω–∞–∫–æ, —É—á—Ç–∏—Ç–µ —á—Ç–æ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:\n"
		" ‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–µ–∞–∫—Ü–∏–π.\n"
		" ‚Ä¢ –í–∞—à —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–µ –≤–∏–¥–∏—Ç –∫–∞–∫ –í—ã –ø–µ—á–∞—Ç–∞–µ—Ç–µ.\n"
		" ‚Ä¢ –ü–æ–º–µ—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ ¬´–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ¬ª –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ /read.\n"
		" ‚Ä¢ –£–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ /delete.\n"
		"–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: <a href=\"https://github.com/Zensonaton/Telehooper/blob/rewrite/src/services/vk/README.md\">üîó —Å—Å—ã–ª–∫–∞</a>.\n"
		"\n"
		"<b>–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è! üòä</b>",
		disable_web_page_preview=True
	)
