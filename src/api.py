# coding: utf-8

import asyncio
from typing import Any

import aiohttp
from aiocouch import Document
from aiogram import Bot
from aiogram.types import BufferedInputFile, Chat, Message, User

import utils
from config import config
from DB import get_db, get_default_subgroup, get_group
from DB import get_user as db_get_user
from exceptions import DisallowedInDebugException
from services.service_api_base import BaseTelehooperServiceAPI, ServiceDialogue
from services.vk.service import VKServiceAPI
from settings import SETTINGS_TREE, SettingsHandler


# –î–∞, —è –∑–Ω–∞—é —á—Ç–æ —ç—Ç–æ –ø–ª–æ—Ö–æ–π —Å–ø–æ—Å–æ–±. –ó–Ω–∞—é. –ù–∏ –∫ —á–µ–º—É –¥—Ä—É–≥–æ–º—É, –∞–¥–µ–∫–≤–∞—Ç–Ω–æ–º—É —è –Ω–µ –ø—Ä–∏—à—ë–ª.
_saved_connections = {}
_service_dialogues: list["TelehooperSubGroup"] = []

settings = SettingsHandler(SETTINGS_TREE)

class TelehooperUser:
	"""
	–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ—Ç–∞ Telehooper.
	"""

	id: int
	username: str | None
	name: str
	creationDate: int
	botBanned: bool
	settingsOverriden: dict
	knownLanguage: str | None
	roles: list[str]
	connections: dict

	rawDocument: Document
	telegramUser: User

	def __init__(self, rawDocument: Document, telegramUser: User) -> None:
		self.rawDocument = rawDocument
		self.telegramUser = telegramUser
		self._parse_document(rawDocument)

	def _parse_document(self, user: Document) -> None:
		"""
		–ü–∞—Ä—Å–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""

		self.id = user["ID"]
		self.username = user["Username"]
		self.name = user["Name"]
		self.creationDate = user["CreationDate"]
		self.botBanned = user["BotBanned"]
		self.settingsOverriden = user["SettingsOverriden"]
		self.knownLanguage = user["KnownLanguage"]
		self.roles = user["Roles"]
		self.connections = user["Connections"]

	async def refresh_document(self) -> Document:
		"""
		–û–±–Ω–æ–≤–ª—è–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î.
		"""

		self.rawDocument = await db_get_user(self.telegramUser)
		self._parse_document(self.rawDocument)

		return self.rawDocument

	def _get_service_store_name(self, name: str) -> str:
		"""
		–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª—é—á–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ `connections` –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è API —Å–µ—Ä–≤–∏—Å–∞.
		"""

		return f"{self.id}-{name}"

	def save_connection(self, service_api: BaseTelehooperServiceAPI) -> None:
		"""
		–°–æ—Ö—Ä–∞–Ω—è–µ—Ç ServiceAPI –≤ –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

		–ü–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç—å, –∏–∑–≤–ª–µ—á—å API –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥—ã –ø–æ —Ç–∏–ø—É `get_vk_connection`.
		"""

		_saved_connections[self._get_service_store_name(service_api.service_name)] = service_api

	def _get_connection(self, name: str) -> VKServiceAPI | None:
		"""
		–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ServiceAPI –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

		–ï—Å–ª–∏ API –Ω–µ –±—ã–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è None.

		–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã –ø–æ —Ç–∏–ø—É `get_vk_connection`.
		"""

		return _saved_connections.get(self._get_service_store_name(name))

	def _remove_connection(self, name: str) -> None:
		"""
		–£–¥–∞–ª—è–µ—Ç ServiceAPI –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""

		_saved_connections.pop(self._get_service_store_name(name), None)

	def get_vk_connection(self) -> VKServiceAPI | None:
		"""
		–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ServiceAPI –¥–ª—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

		–ï—Å–ª–∏ API –Ω–µ –±—ã–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è None.
		"""

		return self._get_connection("VK")

	def remove_vk_connection(self) -> None:
		"""
		–£–¥–∞–ª—è–µ—Ç ServiceAPI –¥–ª—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""

		self._remove_connection("VK")

	def has_role(self, role: str, allow_any: bool = True) -> bool:
		"""
		–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª—å `role`.

		:param role: –†–æ–ª—å, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å.
		:param allow_any: –ï—Å–ª–∏ `True`, —Ç–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–æ–ª–∏ `*` —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è `True`.
		"""

		if allow_any and "*" in self.roles:
			return True

		return role.lower() in [i.lower() for i in self.roles]

	async def restrict_in_debug(self) -> None:
		"""
		–í—ã–∑—ã–≤–∞–µ—Ç Exception, –µ—Å–ª–∏ –≤–∫–ª—é—á—ë–Ω debug-—Ä–µ–∂–∏–º —É –±–æ—Ç–∞, –∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏–º–µ–µ—Ç —Ä–æ–ª–∏ "tester".
		"""

		await TelehooperAPI.restrict_in_debug(self)

	async def get_setting(self, path: str, force_refresh: bool = False) -> Any:
		"""
		–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ –ø—É—Ç–∏ `path`.

		–í—ã–∑—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.
		"""

		if force_refresh:
			await self.refresh_document()

		return self.settingsOverriden.get(path, settings.get_default_setting_value(path))

	async def save_setting(self, path: str, new_value: Any) -> None:
		"""
		–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–æ –ø—É—Ç–∏ `path` –≤ –ë–î. –ï—Å–ª–∏ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é, —Ç–æ –±–æ—Ç –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç –¥–∞–Ω–Ω—É—é –∑–∞–ø–∏—Å—å.

		–í—ã–∑–æ–≤–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
		"""

		is_default = settings.get_default_setting_value(path) == new_value

		if is_default:
			self.rawDocument["SettingsOverriden"].pop(path, None)
			self.settingsOverriden = self.rawDocument["SettingsOverriden"]
			await self.rawDocument.save()

			return

		self.rawDocument["SettingsOverriden"].update({
			path: new_value
		})
		self.settingsOverriden = self.rawDocument["SettingsOverriden"]
		await self.rawDocument.save()

class TelehooperGroup:
	"""
	–ö–ª–∞—Å—Å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≥—Ä—É–ø–ø–µ, –∫–æ—Ç–æ—Ä–∞—è —Å–≤—è–∑–∞–Ω–∞ —Å –∫–∞–∫–∏–º-–ª–∏–±–æ —Å–µ—Ä–≤–∏—Å–æ–º.
	"""

	id: int
	creatorID: int
	createdAt: int
	lastActivityAt: int
	userJoinedWarning: bool
	statusMessageID: int
	adminRights: bool
	chats: dict
	services: dict

	rawDocument: Document
	telegramChat: Chat
	bot: Bot

	def __init__(self, rawDocument: Document, telegramChat: Chat, bot: Bot) -> None:
		self.rawDocument = rawDocument
		self.telegramChat = telegramChat
		self.bot = bot

		self.id = rawDocument["ID"]
		self.creatorID = rawDocument["Creator"]
		self.createdAt = rawDocument["CreatedAt"]
		self.lastActivityAt = rawDocument["LastActivityAt"]
		self.userJoinedWarning = rawDocument["UserJoinedWarning"]
		self.statusMessageID = rawDocument["StatusMessageID"]
		self.adminRights = rawDocument["AdminRights"]
		self.chats = rawDocument["Chats"]
		self.services = rawDocument["Services"]

	async def convert_to_dialogue_group(self, user: TelehooperUser, dialogue: ServiceDialogue, pinned_message: Message) -> None:
		"""
		–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—É—é Telegram-–≥—Ä—É–ø–ø—É –≤ –≥—Ä—É–ø–ø—É-–¥–∏–∞–ª–æ–≥ –∏–∑ —Å–µ—Ä–≤–∏—Å–∞.

		–î–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –∏–∑–º–µ–Ω—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∑–∞–∫—Ä–µ–ø, –∞ —Ç–∞–∫ –∂–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã. –ü–æ–º–∏–º–æ —ç—Ç–æ–≥–æ, –æ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ –≤ –ë–î.
		"""

		async def _sleep():
			await asyncio.sleep(1.5)

		async def _longSleep():
			await asyncio.sleep(3.5)

		# –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã.
		if dialogue.name:
			try:
				await self.telegramChat.set_title(dialogue.name)
			except:
				await _longSleep()
			else:
				await _sleep()

		# –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≥—Ä—É–ø–ø—ã.
		if dialogue.profile_img or dialogue.profile_url:
			picture_bytes = dialogue.profile_img
			if dialogue.profile_url:
				async with aiohttp.ClientSession() as session:
					async with session.get(dialogue.profile_url) as response:
						picture_bytes = await response.read()

			assert picture_bytes

			try:
				await self.telegramChat.set_photo(
					photo=BufferedInputFile(
						file=picture_bytes,
						filename="photo.png"
					)
				)
			except:
				await _longSleep()
			else:
				await _sleep()

		# –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–º–µ–Ω—è—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã.
		try:
			await self.telegramChat.set_description(
				f"@telehooper_bot: –ì—Ä—É–ø–ø–∞ –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ ¬´{dialogue.name}¬ª –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.\n"
				"\n"
				"‚ÑπÔ∏è –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–æ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /this."
			)
		except:
			await _longSleep()
		else:
			await _sleep()

		# –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
		try:
			await pinned_message.edit_text(
				"<b>ü´Ç –ì—Ä—É–ø–ø–∞-–¥–∏–∞–ª–æ–≥ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ</b>.\n"
				"\n"
				"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ —ç—Ç–æ–π –≥—Ä—É–ø–ø–æ–π-–¥–∏–∞–ª–æ–≥–æ–º.\n"
				"\n"
				"<i>WIP!</i>"
			)
		except:
			await _longSleep()
		else:
			await _sleep()

		# –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.
		try:
			await self.telegramChat.pin_message(
				pinned_message.message_id,
				disable_notification=True
			)
		except:
			await _longSleep()
		else:
			await _sleep()

		# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–∞–º—è—Ç—å.
		TelehooperAPI.save_subgroup(
			TelehooperSubGroup(
				id=pinned_message.message_thread_id or 0,
				service_id=dialogue.id,
				dialogue_name=dialogue.name,
				service=dialogue.service_name,
				parent=self
			)
		)

		# –î–µ–ª–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ë–î.
		# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.
		if not self.id in user.rawDocument["Groups"]:
			user.rawDocument["Groups"].append(self.id)

			await user.rawDocument.save()

		# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –≥—Ä—É–ø–ø–µ.
		self.rawDocument["LastActivityAt"] = utils.get_timestamp()
		self.rawDocument["Chats"].update({
			pinned_message.message_thread_id or 0: get_default_subgroup(
				topic_id=pinned_message.message_thread_id or 0,
				service_name=dialogue.service_name,
				dialogue_id=dialogue.id,
				dialogue_name=dialogue.name or "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è",
				pinned_message=pinned_message.message_id
			)
		})

		await self.rawDocument.save()

	async def send_message(self, text: str, topic: int = 0) -> None:
		"""
		–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É.
		"""

		await self.bot.send_message(
			message_thread_id=topic,
			text=text,
			chat_id=self.id
		)

class TelehooperSubGroup:
	"""
	–ö–ª–∞—Å—Å –¥–ª—è –ø–æ–¥-–≥—Ä—É–ø–ø—ã –≤ –≥—Ä—É–ø–ø–µ-–¥–∏–∞–ª–æ–≥–µ. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—Å–µ—Ö –¥–∏–∞–ª–æ–≥–æ–≤ –≤–Ω—É—Ç—Ä–∏ –≥—Ä—É–ø–ø—ã Telegram. –ö–ª–∞—Å—Å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ—Å–∫–æ–ª—å–∫—É –≥—Ä—É–ø–ø—ã –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–æ–ø–∏–∫–∞–º–∏ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –¥–∏–∞–ª–æ–≥–æ–≤.
	"""

	id: int
	service_id: int
	service_dialogue_name: str | None
	service_name: str
	parent: TelehooperGroup

	def __init__(self, id: int, service_id: int, dialogue_name: str | None, service: str, parent: TelehooperGroup) -> None:
		self.id = id
		self.service_id = service_id
		self.service_dialogue_name = dialogue_name
		self.service_name = service
		self.parent = parent

	async def send_message_in(self, text: str) -> None:
		"""
		–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram-–≥—Ä—É–ø–ø—É.
		"""

		await self.parent.send_message(text)

	async def send_message_out(self) -> None:
		"""
		–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–µ—Ä–≤–∏—Å.
		"""

		pass

class TelehooperAPI:
	"""
	–ö–ª–∞—Å—Å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ API –±–æ—Ç–∞ Telehooper.
	"""

	@staticmethod
	async def get_user(user: User) -> TelehooperUser:
		"""
		–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç TelehooperUser.
		"""

		return TelehooperUser(
			await db_get_user(user),
			user
		)

	@staticmethod
	async def get_user_by_id(user_id: int) -> TelehooperUser | None:
		"""
		–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç TelehooperUser, –ª–∏–±–æ None, –µ—Å–ª–∏ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –ë–î, –∏–ª–∏ –∂–µ –µ—Å–ª–∏ –æ–Ω –Ω–µ –ø–∏—Å–∞–ª –±–æ—Ç—É.
		"""

		bot = Bot.get_current()
		if not bot:
			return

		try:
			user = (await (bot).get_chat_member(user_id, user_id)).user

			return TelehooperUser(
				await (await get_db())[f"user_{user_id}"],
				user
			)
		except:
			return None

	@staticmethod
	async def get_group(chat: Chat | int, db_group: Document | None = None) -> TelehooperGroup | None:
		"""
		–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –≥—Ä—É–ø–ø—ã, –ª–∏–±–æ None, –µ—Å–ª–∏ –¥–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã –Ω–µ—Ç –≤ –ë–î, –∏–ª–∏ –∂–µ –µ—Å–ª–∏ –±–æ—Ç –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –Ω–µ–π.
		"""

		chat_id = chat if isinstance(chat, int) else chat.id

		bot = Bot.get_current()
		assert bot

		return TelehooperGroup(
			db_group if db_group else await get_group(chat_id),
			chat if isinstance(chat, Chat) else (await bot.get_chat(chat_id)),
			bot
		)

	@staticmethod
	async def restrict_in_debug(user: TelehooperUser | User | None) -> None:
		"""
		–í—ã–∑—ã–≤–∞–µ—Ç Exception, –µ—Å–ª–∏ –≤–∫–ª—é—á—ë–Ω debug-—Ä–µ–∂–∏–º —É –±–æ—Ç–∞, –∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏–º–µ–µ—Ç —Ä–æ–ª–∏ "tester".
		"""

		_exc = DisallowedInDebugException("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –±–æ—Ç–∞ –ø—Ä–∏ –∑–∞–ø—É—â–µ–Ω–Ω–æ–º debug-—Ä–µ–∂–∏–º–µ. –ï—Å–ª–∏ –í—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ ‚Äî –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∫–æ–Ω—Å–æ–ª–∏ –±–æ—Ç–∞.")

		if not user:
			raise _exc

		if not config.debug:
			return

		if isinstance(user, User):
			user = await TelehooperAPI.get_user(user)


		if not user.has_role("tester"):
			raise _exc

	@staticmethod
	def save_subgroup(group: TelehooperSubGroup) -> None:
		"""
		–°–æ—Ö—Ä–∞–Ω—è–µ—Ç TelehooperSubGroup –≤ –ø–∞–º—è—Ç—å –±–æ—Ç–∞ —Å —Ü–µ–ª—å—é –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è.
		"""

		_service_dialogues.append(group)

	@staticmethod
	def get_subgroup_by_service_dialogue(user: TelehooperUser, dialogue: ServiceDialogue) -> TelehooperSubGroup | None:
		"""
		–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç TelehooperSubGroup –ø–æ –¥–∏–∞–ª–æ–≥—É –∏–∑ —Å–µ—Ä–≤–∏—Å–∞.

		–ï—Å–ª–∏ –≥—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è None.
		"""

		for servDialog in _service_dialogues:
			if servDialog.parent.creatorID != user.id:
				continue

			if servDialog.service_name != dialogue.service_name:
				continue

			if servDialog.service_id != dialogue.id:
				continue

			return servDialog

		return None
