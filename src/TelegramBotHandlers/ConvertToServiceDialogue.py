# coding: utf-8

"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `ConvertToServiceDialogue`."""

import asyncio
import logging
from typing import Tuple

from aiogram import Bot, Dispatcher
import aiogram
from aiogram.types import (CallbackQuery, Chat, InlineKeyboardButton,
                           InlineKeyboardMarkup)
from aiogram.types import Message as MessageType
from aiogram.types import User
from Consts import CommandThrottleNames as CThrottle
from Consts import InlineButtonCallbacks as CButton
from Exceptions import CommandAllowedOnlyInGroup
from TelegramBot import Telehooper

from TelegramBotHandlers.Dialogue import ThisDialogue

Bot: 	Telehooper 	= None # type: ignore
TGBot: 	Bot 		= None # type: ignore
DP: 	Dispatcher 	= None # type: ignore

logger = logging.getLogger(__name__)


def _setupCHandler(bot: Telehooper) -> None:
	"""
	–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—É `ConvertToServiceDialogue`.
	"""

	global Bot, TGBot, DP

	Bot = bot
	TGBot = Bot.TGBot
	DP = Bot.DP

	DP.register_message_handler(ConvertToServiceDialogue, commands=["converttodialogue", "converttoservicedialogue"])
	DP.register_callback_query_handler(DialogueConvertCallback, lambda query: query.data == CButton.CONVERT_GROUP_TO_DIALOGUE)
	DP.register_callback_query_handler(DialogueMenuCallback, lambda query: query.data == CButton.BACK_TO_GROUP_CONVERTER)

async def ConvertToServiceDialogue(msg: MessageType) -> None:
	await DP.throttle(CThrottle.DIALOGUE_CONVERT, rate=3, chat_id=msg.chat.id)

	if not msg.chat.type.endswith("group"):
		raise CommandAllowedOnlyInGroup

	await ConvertToDialogueMessage(msg)

async def ConvertToDialogueMessage(msg: MessageType, edit_message_instead: bool = False) -> None:
	CONDITIONS_MET = await CheckServiceDialogueConversionConditions(msg.chat, msg.from_user)
	ALL_CONDITIONS_ARE_MET = all(CONDITIONS_MET)

	_text = f"""<b>‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ! –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞! ‚ö†Ô∏è</b>

–¢—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É, –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram-–≥—Ä—É–ø–ø—ã –≤ <b>–¥–∏–∞–ª–æ–≥</b>.
–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è/–±–µ—Å–µ–¥—É –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π –¥–∏–∞–ª–æ–≥ –≤ <b>Telegram</b>!

<b>‚ÑπÔ∏è –°—É—â–µ—Å—Ç–≤—É—é—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ª–∏–º–∏—Ç—ã:</b>
 <b>‚Ä¢</b> <b>1</b> –¥–∏–∞–ª–æ–≥ –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ ‚Äî <b>1 –≥—Ä—É–ø–ø–∞</b>,
 <b>‚Ä¢</b> –õ–∏–º–∏—Ç Telegram –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –≥—Ä—É–ø–ø ‚Äî <b>500 —à—Ç—É–∫</b> (<a href=\"https://limits.tginfo.me/ru-RU\">–∫–ª–∏–∫</a>),
 <b>‚Ä¢</b> –í –¥–µ–Ω—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å <b>50 –≥—Ä—É–ø–ø</b> (<a href=\"https://limits.tginfo.me/ru-RU\">–∫–ª–∏–∫</a>).

<b>‚ÑπÔ∏è –ü–æ—Å–ª–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É –≥—Ä—É–ø–ø—ã –∏–∑–º–µ–Ω–∏—Ç—Å—è:</b>
 <b>‚Ä¢</b> –ù–∞–∑–≤–∞–Ω–∏–µ; –Ω–∞ –∏–º—è –¥–∏–∞–ª–æ–≥–∞,
 <b>‚Ä¢</b> –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è; –Ω–∞ —Ñ–æ—Ç–æ –¥–∏–∞–ª–æ–≥–∞,
 <b>‚Ä¢</b> –û–ø–∏—Å–∞–Ω–∏–µ.

{"–í—Å–µ —Å–ª–µ–¥—É—é—â–∏–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –±—ã–ª–∏ —Å–æ–±–ª—é–¥–µ–Ω—ã" if ALL_CONDITIONS_ARE_MET else "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –º–æ–∂–Ω–æ, –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ —Å–ª–µ–¥—É—é—â–∏–µ <b>—É—Å–ª–æ–≤–∏—è</b> –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã"}:
 {"‚úÖ" if CONDITIONS_MET[0] else "‚òëÔ∏è"} –¢—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ –≥—Ä—É–ø–ø–µ,
 {"‚úÖ" if CONDITIONS_MET[1] else "‚òëÔ∏è"} –£ –±–æ—Ç–∞ –¥–æ–ª–∂–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞,
 {"‚úÖ" if CONDITIONS_MET[2] else "‚òëÔ∏è"} –î–∞–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ —É–∂–µ –±—ã—Ç—å –¥–∏–∞–ª–æ–≥–æ–º.

{"–ï—Å–ª–∏ —Ç—ã —Å–æ–≥–ª–∞—Å–µ–Ω, —Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:" if ALL_CONDITIONS_ARE_MET else "<b>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –º–æ–∂–Ω–æ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —É—Å–ª–æ–≤–∏–π, –æ–ø–∏—Å–∞–Ω–Ω—ã—Ö –≤—ã—à–µ‚ùóÔ∏è</b>"}
"""

	keyboard = InlineKeyboardMarkup()

	if ALL_CONDITIONS_ARE_MET:
		keyboard.add(
			InlineKeyboardButton("‚öôÔ∏è –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=CButton.CONVERT_GROUP_TO_DIALOGUE)
		)

	keyboard.insert(
		InlineKeyboardButton("üîô –û—Ç–º–µ–Ω–∞", callback_data=CButton.CANCEL_EDIT_CUR_MESSAGE)
	)


	if edit_message_instead:
		await msg.edit_text(_text, reply_markup=keyboard)
		return

	await msg.reply(_text, reply_markup=keyboard)

async def CheckServiceDialogueConversionConditions(chat: Chat, user: User) -> Tuple[bool, bool, bool]:
	"""
	–í—ã–¥–∞—ë—Ç Tuple —Å Boolean-–∑–Ω–∞—á–µ–Ω–∏—è–º–∏, –æ–±–æ–∑–Ω–∞—á–∞—é—â–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —É—Å–ª–æ–≤–∏–π –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è Telegram –≥—Ä—É–ø–ø—ã –≤ –¥–∏–∞–ª–æ–≥ —Å–µ—Ä–≤–∏—Å–∞.
	"""

	USER_SENDER_IS_ADMIN: bool = False
	BOT_IS_ADMIN: bool = False
	NOT_CONNECTED_AS_DIALOGUE: bool = True # TODO

	# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –≤ —á–∞—Ç–µ:
	chat_admins = (await TGBot.get_chat_administrators(chat.id))

	USER_SENDER_IS_ADMIN = bool([i for i in chat_admins if i.user.id == user.id])
	BOT_IS_ADMIN = bool([i for i in chat_admins if i.user.id == TGBot.id])

	return (
		USER_SENDER_IS_ADMIN,
		BOT_IS_ADMIN,
		NOT_CONNECTED_AS_DIALOGUE
	)

async def DialogueConvertCallback(query: CallbackQuery):
	CONDITIONS_MET = await CheckServiceDialogueConversionConditions(query.message.chat, query.message.from_user)
	ALL_CONDITIONS_ARE_MET = all(CONDITIONS_MET)

	if not ALL_CONDITIONS_ARE_MET:
		return await query.answer("–ù–µ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –±—ã–ª–∏ —Å–æ–±–ª—é–¥–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞.")

	await ConvertGroupToDialogue(query.message.chat)

	await asyncio.sleep(0)

	await query.message.edit_text(query.message.html_text)
	await query.message.answer("<b>–û—Ç–ª–∏—á–Ω–æ!</b> –î–∞–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –≤ –¥–∏–∞–ª–æ–≥! ‚ò∫Ô∏è\n\n–¢–µ–ø–µ—Ä—å —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å, –∫ –∫–∞–∫–æ–º—É –¥–∏–∞–ª–æ–≥—É –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ —ç—Ç–∞ –≥—Ä—É–ø–ø–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–¥—Å–æ–µ–¥–∏–Ω–µ–Ω–∞: –ò–º–µ–Ω–Ω–æ —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å—Å—è —Å—é–¥–∞, –∏ —Ç—É—Ç –∂–µ –Ω–∞ –Ω–∏—Ö —Ç—ã –±—É–¥–µ—à—å –æ—Ç–≤–µ—á–∞—Ç—å, –¥–ª—è —ç—Ç–æ–≥–æ —Ç—ã –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ—é /dialogue. –£–¥–æ—Å—Ç–≤–∞ —Ä–∞–¥–∏, —è –∏—Å–ø–æ–ª—å–∑—É—é –µ—ë –∑–∞ —Ç–µ–±—è:")
	await ThisDialogue(query.message)

	return await query.answer()

async def DialogueMenuCallback(query: CallbackQuery) -> None:
	await ConvertToDialogueMessage(query.message, True)

async def ConvertGroupToDialogue(chat: Chat) -> None:
	"""
	–ü–µ—Ä–µ–≤–æ–¥–∏—Ç –≥—Ä—É–ø–ø—É –≤ –¥–∏–∞–ª–æ–≥.
	"""

	# TODO: –ü—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ –≥—Ä—É–ø–ø—ã.
	await chat.set_title("„Ö§")

	try:
		await chat.delete_photo()
	except: pass

	try:
		await chat.set_description("[Telehooper] –ü—É—Å—Ç–æ–π –¥–∏–∞–ª–æ–≥ —Å–µ—Ä–≤–∏—Å–∞.")
	except: pass
