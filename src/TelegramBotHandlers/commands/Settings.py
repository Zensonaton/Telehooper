# coding: utf-8

"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `Settings`."""

from typing import TYPE_CHECKING, cast

import aiogram
from aiogram import Dispatcher
from aiogram.types import Message as MessageType, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from Consts import InlineButtonCallbacks as CButtons
from loguru import logger

from Exceptions import CommandAllowedOnlyInPrivateChats
from TelegramBot import TelehooperUser

if TYPE_CHECKING:
	from TelegramBot import Telehooper

TelehooperBot: 	"Telehooper" 	= None # type: ignore
TGBot:	aiogram.Bot 	= None # type: ignore
DP: 	Dispatcher 		= None # type: ignore


def _setupCHandler(bot: "Telehooper") -> None:
	"""
	–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—É `Settings`.
	"""

	global TelehooperBot, TGBot, DP

	TelehooperBot = bot
	TGBot = TelehooperBot.TGBot
	DP = TelehooperBot.DP

	DP.register_message_handler(Settings, commands=["settings", "options", "setting", "option", "s"])
	DP.register_callback_query_handler(SettingsCallbackHandler, lambda query: query.data.startswith(CButtons.CommandActions.GOTO_SETTING))

async def Settings(msg: MessageType) -> None:
	if msg.chat.type != "private":
		raise CommandAllowedOnlyInPrivateChats

	await SettingsMessage(msg)

async def SettingsMessage(msg: MessageType, edit_message_instead: bool = False, force_path: str | None = None, user: TelehooperUser | None = None) -> None:
	if not user:
		user = await TelehooperBot.getBotUser(msg.from_user.id)

	args = msg.get_args()
	if force_path:
		args = force_path

	isGivenPathRight = False
	curObject = None
	isAFile = False
	keyboard = InlineKeyboardMarkup(row_width=2)

	# –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–æ–ø–∞—Ä—Å–∏—Ç—å –ø—É—Ç—å, –¥–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:
	path = []
	pathStr = ""
	if args:
		path = TelehooperBot.settingsHandler.listPath(force_path if force_path else args)

		isGivenPathRight = bool(path)

		# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ –¥–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—É—Ç—å.
		# –ï—Å–ª–∏ –¥–∞, —Ç–æ –ø—ã—Ç–∞–µ–º—Å—è –¥–æ—Å—Ç–∞—Ç—å –æ–±—ä–µ–∫—Ç, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –ø—É—Ç—ë–º.
		if isGivenPathRight:
			path = cast(list[str], path)
			pathStr = ".".join(path)

			curObject = cast(dict, TelehooperBot.settingsHandler.getByPath(pathStr))
			isAFile = curObject["IsAFile"]

	# –°–æ—Ö—Ä–∞–Ω—è–µ–º –±—É–¥—É—â–∏–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:
	_text = ""
	if not isGivenPathRight and args:
		_text = f"<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è</b>\n\n–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ¬´<code>{args}</code>¬ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–æ–≤–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /settings —á—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å –≤—Å—ë —Å–Ω–∞—á–∞–ª–∞.\n–ï—Å–ª–∏ —Ç—ã –ø–æ–ª—É—á–∏–ª –≤–≤–µ–¥—ë–Ω–Ω—É—é —Ç–æ–±–æ—é –∫–æ–º–∞–Ω–¥—É –æ—Ç –±–æ—Ç–∞, —Ç–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π <a href=\"https://github.com/Zensonaton/Telehooper\">Issue –Ω–∞ Github –ø—Ä–æ–µ–∫—Ç–∞</a>."
	elif isAFile:
		# –£ –Ω–∞—Å –µ—Å—Ç—å –≤–∞–ª–∏–¥–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞, –¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–∑–º–µ–Ω–∏—Ç—å –µ—ë.

		path = cast(list[str], path)
		curObject = cast(dict, curObject)

		keyboard.add(
			InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data=CButtons.CommandActions.GOTO_SETTING + ".".join(path[:-1])),
			InlineKeyboardButton("üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É", callback_data=CButtons.CommandActions.GOTO_SETTING)
		)

		keyboard.add(
			InlineKeyboardButton("And she spoke words that will melt in your hands,", callback_data="a"),
		)
		keyboard.add(
			InlineKeyboardButton("And she spoke words of wisdom", callback_data="a"),
		)
		keyboard.add(
			InlineKeyboardButton("„Ö§", callback_data="a"),
		)
		keyboard.add(
			InlineKeyboardButton("To the basement people, to the basement", callback_data="a"),
		)
		keyboard.add(
			InlineKeyboardButton("Many surprises await you", callback_data="a"),
		)

		_text = f"<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è</b>\n\n{TelehooperBot.settingsHandler.renderByPath(path, user)}\n\n‚ÑπÔ∏è <b>{curObject['Name']}</b>:\n{curObject['Documentation']}\n\n\n–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: ‚úÖ –í–∫–ª—é—á–µ–Ω–æ (–¥–∞).\n–£–ø—Ä–∞–≤–ª—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ–º –¥–∞–Ω–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ:"
	elif not isAFile:
		# –£ –Ω–∞—Å –¥–∞–Ω–∞ –ø–∞–ø–∫–∞, –¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–∞–ª—å—à–µ –ø—Ä—ã–≥–∞—Ç—å –ø–æ –ø–∞–ø–∫–∞–º:

		path = cast(list[str], path)
		curObject = cast(dict, curObject)

		if path:
			if len(path) > 1:
				keyboard.insert(
					InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data=CButtons.CommandActions.GOTO_SETTING + ".".join(path[:-1]))
				)

			keyboard.insert(
				InlineKeyboardButton("üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É", callback_data=CButtons.CommandActions.GOTO_SETTING)
			)


		else:
			keyboard.add(
				InlineKeyboardButton("„Ö§", callback_data=CButtons.DO_NOTHING) 
			)

		# –†–∞–∑–¥–µ–ª–∏–º.
		keyboard.row()

		# –î–æ–±–∞–≤–∏–º –≤—Å–µ –ø–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã.
		folders = cast(dict, TelehooperBot.settingsHandler.getFolders(pathStr))
		for index, folder in enumerate(folders):
			folderName = folder
			folder = folders[folder]

			keyboard.insert(
				InlineKeyboardButton("üìÅ " + folder["Name"], callback_data=CButtons.CommandActions.GOTO_SETTING + folder["FullPath"])
			)

		files = cast(dict, TelehooperBot.settingsHandler.getFiles(pathStr))
		for index, file in enumerate(files):
			fileName = file
			file = files[file]

			keyboard.insert(
				InlineKeyboardButton("‚öôÔ∏è " + file["Name"], callback_data=CButtons.CommandActions.GOTO_SETTING + file["FullPath"])
			)


		_text = f"<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è</b>\n\n–î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —ç—Ç–æ–º—É –º–µ–Ω—é –∏—Å–ø–æ–ª—å–∑—É–π <b>–∫–Ω–æ–ø–∫–∏</b> –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º. –ù–∞–≤–∏–≥–∞–π—Å—è –ø–æ —Ä–∞–∑–Ω—ã–º <b>¬´—Ä–∞–∑–¥–µ–ª–∞–º¬ª</b> –Ω–∞—Å—Ç—Ä–æ–µ–∫, –æ—Ç–º–µ—á–µ–Ω–Ω—ã—Ö —ç–º–æ–¥–∑–∏ üìÅ, —á—Ç–æ –±—ã –Ω–∞–π—Ç–∏ <b>–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</b>, –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ —ç–º–æ–¥–∑–∏ ‚öôÔ∏è, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã–µ –≤–Ω—É—Ç—Ä–∏ —ç—Ç–∏—Ö ¬´—Ä–∞–∑–¥–µ–ª–æ–≤¬ª.\n\n{TelehooperBot.settingsHandler.renderByPath(path, user)}"
	else:
		logger.error(f"–ù–µ–≤–æ–∑–º–æ–∂–Ω—ã–π –∫–µ–π—Å –≤ /settings. args=\"{args}\"")
		_text = "–ï—Å–ª–∏ —Ç—ã —É–≤–∏–¥–µ–ª —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π <a href=\"https://github.com/Zensonaton/Telehooper\">Issue –Ω–∞ Github –ø—Ä–æ–µ–∫—Ç–∞</a>, –ø–æ—Å–∫–æ–ª—å–∫—É —ç—Ç–æ - –±–∞–≥ :)"

	# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ:
	if edit_message_instead:
		await msg.edit_text(_text, reply_markup=keyboard)
	else:
		await msg.answer(_text, reply_markup=keyboard)

async def SettingsCallbackHandler(query: CallbackQuery):
	newPath = query.data.split(CButtons.CommandActions.GOTO_SETTING)[-1]

	await SettingsMessage(
		query.message, 
		True, 
		newPath,
		await TelehooperBot.getBotUser(query.from_user.id)
	)

