# coding: utf-8

"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `VKLogin`."""

import logging

import Consts
import MiddlewareAPI
import Utils
import vkbottle
from aiogram import Bot, Dispatcher
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.types import Message as MessageType
from Consts import AccountDisconnectType
from Consts import CommandThrottleNames as CThrottle
from Consts import InlineButtonCallbacks as CButtons
from ServiceMAPIs.VK import VKAccount
from TelegramBot import Telehooper

Bot: 	Telehooper 	= None # type: ignore
TGBot: 	Bot 		= None # type: ignore
DP: 	Dispatcher 	= None # type: ignore

logger = logging.getLogger(__name__)


def _setupCHandler(bot: Telehooper) -> None:
	"""
	–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—É `VKLogin`.
	"""

	global Bot, TGBot, DP

	Bot = bot
	TGBot = Bot.TGBot
	DP = Bot.DP

	DP.register_message_handler(VKLogin, commands=["vklogin"])


async def VKLogin(msg: MessageType) -> None:
	await DP.throttle(CThrottle.VK_LOGIN, rate=1, chat_id=msg.chat.id)

	args = (msg.get_args() or "").split(" ")

	if len(args) != 2:
		await msg.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: <code>/vklogin –ª–æ–≥–∏–Ω –ø–∞—Ä–æ–ª—å</code>.")

		return

	user = await Bot.getBotUser(msg.from_user.id)
	if user.isVKConnected:
		await msg.answer("<i>–í–ö —É–∂–µ –ø–æ–¥–∫–ª—é—á—ë–Ω.</i>") # FIXME: –í—Ä–µ–º–µ–Ω–Ω–æ

		await user.vkMAPI.disconnectService(AccountDisconnectType.SILENT, True) # type: ignore


	await msg.delete()
	await msg.answer("–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –î–∞–π –º–Ω–µ –≤—Ä–µ–º—è, –º–Ω–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ... ‚è≥\n\n<i>(—Ç–≤–æ—ë –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ –≤ —Ü–µ–ª—è—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ üëÄ)</i>")


	vkAccount: MiddlewareAPI.VKAccount

	try:
		# –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –≤ –í–ö —á–µ—Ä–µ–∑ –ª–æ–≥–∏–Ω+–ø–∞—Ä–æ–ª—å:
		vkToken = await vkbottle.UserAuth(
			Consts.officialVKAppCreds.VK_ME.clientID,
			Consts.officialVKAppCreds.VK_ME.clientSecret
		).get_token(
			args[0],
			args[1]
		)

		# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –í–ö:
		vkAccount = await user.connectVKAccount(vkToken, True)

	except:
		keyboard = InlineKeyboardMarkup().add(
			InlineKeyboardButton(text="–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ VK ID", callback_data=CButtons.VK_LOGIN_VIA_VKID)
		)

		await msg.answer("–£–ø—Å, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ. üòî\n\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n ‚Ä¢ –ø–∞—Ä–æ–ª—å –∏/–ª–∏ –ª–æ–≥–∏–Ω –Ω–µ–≤–µ—Ä–µ–Ω; üîê\n ‚Ä¢ –±–æ—Ç —Å—Ç–æ–ª–∫–Ω—É–ª—Å—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π Captcha; ü§ñüî´\n ‚Ä¢ –Ω–∞ —Ç–≤–æ—ë–º –∞–∫–∫–∞—É–Ω—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –¥–≤—É—Ö—ç—Ç–∞–ø–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –±–æ—Ç–æ–º. üîë\n\n–ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞; –≤ —Å–ª—É—á–∞–µ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –æ—à–∏–±–æ–∫, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π —á–µ—Ä–µ–∑ VK ID, —Å –∫–æ—Ç–æ—Ä–æ–π –Ω–∞–º–Ω–æ–≥–æ –º–µ–Ω—å—à–µ –ø—Ä–æ–±–ª–µ–º:", reply_markup=keyboard)
	else:
		await successConnectionMessage(msg, vkAccount)

async def VKTokenMessageHandler(msg: MessageType) -> MessageType:
	await DP.throttle(CThrottle.VK_LOGIN_VKID, rate=1, chat_id=msg.chat.id)

	await msg.delete()
	await msg.answer("–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –î–∞–π –º–Ω–µ –≤—Ä–µ–º—è, –º–Ω–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ... ‚è≥\n\n<i>(—Ç–≤–æ—ë –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ –≤ —Ü–µ–ª—è—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ üëÄ)</i>")

	user = await Bot.getBotUser(msg.from_user.id)
	if user.isVKConnected:
		await msg.answer("<i>–í–ö —É–∂–µ –ø–æ–¥–∫–ª—é—á—ë–Ω.</i>") # FIXME: –í—Ä–µ–º–µ–Ω–Ω–æ

		await user.vkMAPI.disconnectService(AccountDisconnectType.SILENT, True) # type: ignore


	vkToken = Utils.extractAccessTokenFromFullURL(msg.text)
	vkAccount = await user.connectVKAccount(vkToken, False)

	# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —É—Å–ø–µ—à–Ω–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞:
	await vkAccount.postAuthInit()

	return await successConnectionMessage(msg, vkAccount)

async def successConnectionMessage(msg: MessageType, vkAccount: VKAccount) -> MessageType:
	return await msg.answer(f"–£—Å–ø–µ—Ö, —è —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ —Ç–≤–æ–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, <i>{vkAccount.vkFullUser.first_name} {vkAccount.vkFullUser.last_name}!</i> üòâüëç\n\n‚öôÔ∏è –ü–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã <b>¬´–í–ö–æ–Ω—Ç–∞–∫—Ç–µ¬ª</b> —Å—Ç–æ–∏—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /services –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π.")

async def VKTokenURLMessageHandler(msg: MessageType) -> MessageType:
	return await msg.answer("–û–π! –¢—ã –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–µ–º–Ω–æ–≥–æ –Ω–µ —Ç–æ, —á—Ç–æ –º–Ω–µ –Ω—É–∂–Ω–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ: –ù–∞ —Å–∞–π—Ç–µ, —Å—Å—ã–ª–∫—É –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Å–∫–∏–Ω—É–ª, –Ω—É–∂–Ω–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏ <b>–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é</b>, –∏ <b>–ø–æ—Å–ª–µ</b>, —Å—Å—ã–ª–∫—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ.")
