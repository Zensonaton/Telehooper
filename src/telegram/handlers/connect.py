# coding: utf-8

from typing import cast

from aiogram import Router, types
from aiogram.filters import Command, Text
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from consts import CommandButtons
from services.vk.connect_handler import router as VKRouter


router = Router()
router.include_router(VKRouter)

async def connect_command_message(msg: types.Message, edit_message: bool = False) -> None:
	"""
	–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/connect`.
	"""

	_text = (
		"<b>üåê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞</b>.\n"
		"\n"
		"–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å –∫ –±–æ—Ç—É. –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –í–∞–º –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã:\n"
		" ‚Ä¢ <a href=\"vk.com\">–í–ö–æ–Ω—Ç–∞–∫—Ç–µ</a>.\n"
		"\n"
		"‚ÑπÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –í–∞–º —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è, –∞ –∑–∞—Ç–µ–º —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –í–∞–º –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º."
	)

	keyboard = InlineKeyboardMarkup(inline_keyboard=[
		[InlineKeyboardButton(text="–í–ö–æ–Ω—Ç–∞–∫—Ç–µ", callback_data="/connect vk")]
	])

	if edit_message:
		await msg.edit_text(
			_text,
			disable_web_page_preview=True,
			reply_markup=keyboard
		)
	else:
		await msg.answer(
			_text,
			disable_web_page_preview=True,
			reply_markup=keyboard
		)

@router.message(Command("connect"))
@router.message(Text(CommandButtons.CONNECT))
async def connect_command_handler(msg: types.Message) -> None:
	"""
	Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/connect`.
	"""

	await connect_command_message(msg)

@router.callback_query(Text("/connect"))
async def connect_inline_handler(query: types.CallbackQuery) -> None:
	"""
	Inline Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/connect`.

	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥".
	"""

	await connect_command_message(
		cast(types.Message, query.message),
		edit_message=True
	)
