# coding: utf-8

from typing import cast

from aiogram import Bot as BotT
from aiogram import Router as RouterT
from aiogram import types
from aiogram.filters import Command, Text
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from services.vk.connect_handler import Router as VKRouter


Bot: BotT = None # type: ignore
Router = RouterT()

def init(bot: BotT) -> RouterT:
	"""
	–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ Handler'—ã –∏–∑ —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è.
	"""

	global Bot


	Bot = bot

	Router.include_router(VKRouter)

	return Router

async def connect_message(msg: types.Message, edit_message: bool = False) -> None:
	"""
	–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /connect.
	"""

	_text = (
		"<b>üåê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞</b>.\n"
		"\n"
		"–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å –∫ –±–æ—Ç—É. –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –í–∞–º –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã:\n"
		" ‚Ä¢ <a href=\"vk.com\">–í–ö–æ–Ω—Ç–∞–∫—Ç–µ</a>.\n"
		"\n"
		"‚ÑπÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –í–∞–º —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è, –∞ –∑–∞—Ç–µ–º —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –í–∞–º –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º."
	)

	keyboard = InlineKeyboardMarkup(inline_keyboard=[
		[
			InlineKeyboardButton(text="–í–ö–æ–Ω—Ç–∞–∫—Ç–µ", callback_data="connect vk")
		]
	])

	if edit_message:
		await msg.edit_text(
			_text,
			disable_web_page_preview=True,
			reply_markup=keyboard
		)
	else:
		await msg.answer(
			_text,
			disable_web_page_preview=True,
			reply_markup=keyboard
		)

@Router.message(Command("connect"))
async def connect_handler(msg: types.Message) -> None:
	"""
	Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /connect.
	"""

	await connect_message(msg)

@Router.callback_query(Text("connect"))
async def connect_inline_handler(query: types.CallbackQuery) -> None:
	"""
	Inline Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /connect: –í—ã–∑—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥".
	"""

	await connect_message(
		cast(types.Message, query.message),
		edit_message=True
	)
