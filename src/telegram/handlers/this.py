# coding: utf-8

from typing import cast

from aiogram import F, Bot, Router, types
from aiogram.filters import Command, Text

from consts import CommandButtons
from DB import get_group, get_user
from services.vk.this_handler import router as VKRouter


router = Router()
router.include_router(VKRouter)

async def group_convert_message(chat_id: int, user: types.User, message_to_edit: types.Message | int | None = None, called_from_command: bool = True) -> None:
	"""
	–°–æ–æ–±—â–µ–Ω–∏–µ —É –∫–æ–º–∞–Ω–¥—ã /this, –ª–∏–±–æ –∂–µ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –±–æ—Ç—É –ø–æ—Å–ª–µ –µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É.
	"""

	bot = Bot.get_current()

	if not bot:
		return

	try:
		group = await get_group(chat_id)
	except:
		# TODO: –°–∞–º–æ–º—É –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–∞–∫–æ–π —Å–ª—É—á–∞–π.

		await bot.send_message(
			chat_id,
			text=(
				"<b>‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥—Ä—É–ø–ø—ã-–¥–∏–∞–ª–æ–≥–∞</b>.\n"
				"\n"
				"–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∏ –¥–∞–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞ –Ω–µ –±—ã–ª–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞.\n"
				"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–∫–ª—é—á–∏—Ç–µ –±–æ—Ç–∞ Telehooper –∏ —Å–Ω–æ–≤–∞ –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ –≥—Ä—É–ø–ø—É, —Å–ª–µ–¥—É—è –ø–æ—Å–ª–µ–¥—É—é—â–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.\n"
				"\n"
				"‚ÑπÔ∏è –ï—Å–ª–∏ –¥–∞–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ —Å–æ–∑–¥–∞–π—Ç–µ Github Issue —É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Telehooper, —Å—Å—ã–ª–∫—É –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –∫–æ–º–∞–Ω–¥–µ <code>/faq 6</code>."
			)
		)

		return

	db_user = await get_user(user)

	if not db_user["Connections"]:
		await bot.send_message(
			chat_id,
			text=(
				"<b>ü´Ç –ì—Ä—É–ø–ø–∞-–¥–∏–∞–ª–æ–≥</b>.\n"
				"\n"
				"–í—ã –ø–æ–ø—ã—Ç–∞–ª–∏—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å –≥—Ä—É–ø–ø—É –∫ —Å–µ—Ä–≤–∏—Å—É, –Ω–æ —É –í–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞. üòî\n"
				"\n"
				"‚ÑπÔ∏è –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã –∫ Telehooper, –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏—Å—å –∫–æ–º–∞–Ω–¥–æ–π /connect."
			)
		)

	keyboard = types.InlineKeyboardMarkup(
		inline_keyboard=[
			[
				types.InlineKeyboardButton(text="–í–ö–æ–Ω—Ç–∞–∫—Ç–µ", callback_data="/this vk")
			]
		]
	)

	footer_txt = (
		"–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å –≥—Ä—É–ø–ø—É –∫ —Å–µ—Ä–≤–∏—Å—É.\n"
		"–ü–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã –∫ —Å–µ—Ä–≤–∏—Å—É –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –¥—Ä—É–≥–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –Ω—É–∂–Ω–æ–≥–æ –í–∞–º —Å–µ—Ä–≤–∏—Å–∞.\n"
	) if called_from_command else (
		"–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–¥–∞–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–Ω–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n"
		"–¢–µ–ø–µ—Ä—å –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—ã–π —Å–µ—Ä–≤–∏—Å, –∞ –ø–æ—Å–ª–µ —É–∫–∞–∑–∞—Ç—å, –∫–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Å —Å–µ—Ä–≤–∏—Å–∞.\n"
	)

	_text = (
		"<b>ü´Ç –ì—Ä—É–ø–ø–∞-–¥–∏–∞–ª–æ–≥</b>.\n"
		"\n"
		f"{footer_txt}"
		"\n"
		"–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç, –∫ –±–æ—Ç—É –ø–æ–¥–∫–ª—é—á–µ–Ω–æ —Å–ª–µ–¥—É—é—â–µ–µ:\n"
		" ‚Ä¢ <b>–í–ö–æ–Ω—Ç–∞–∫—Ç–µ</b>: <a href=\"google.com\">–ò–º—è –§–∞–º–∏–ª–∏—è</a>.\n" # TODO: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"\n"
		f"‚ÑπÔ∏è {'–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Å–µ—Ä–≤–∏—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.' if called_from_command else '–ï—Å–ª–∏ –í—ã –ø–æ—Ç–µ—Ä—è–µ—Ç–µ –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–æ –í—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–∑–≤–∞—Ç—å –µ–≥–æ —Å–Ω–æ–≤–∞, –ø—Ä–æ–ø–∏—Å–∞–≤ –∫–æ–º–∞–Ω–¥—É <code>/this</code>.'}"
	)

	if message_to_edit:
		await bot.edit_message_text(
			text=_text,
			chat_id=chat_id,
			message_id=message_to_edit.message_id if isinstance(message_to_edit, types.Message) else message_to_edit,
			reply_markup=keyboard
		)
	else:
		await bot.send_message(
			chat_id,
			text=_text,
			reply_markup=keyboard
		)

@router.message(Command("this"))
@router.message(Text(CommandButtons.THIS))
async def this_command_handler(msg: types.Message):
	"""
	Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/this`.
	"""

	# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞ –≤ –≥—Ä—É–ø–ø–µ.
	if msg.chat.type == "private":
		await msg.reply(
			"<b>‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã</b>.\n"
			"\n"
			"–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ, –∫ –∫–æ—Ç–æ—Ä–æ–π –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å.\n"
		)

		return

	await group_convert_message(msg.chat.id, cast(types.User, msg.from_user), called_from_command=True)

@router.callback_query(Text("/this"), F.message.as_("msg"))
async def this_inline_handler(query: types.CallbackQuery, msg: types.Message) -> None:
	"""
	Inline Callback Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/this`.

	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–Ω–∞–∑–∞–¥", –ø–æ–∫–∞–∑—ã–≤–∞—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–º–∞–Ω–¥—ã `/this`.
	"""

	await group_convert_message(msg.chat.id, cast(types.User, query.from_user), message_to_edit=query.message, called_from_command=False)
