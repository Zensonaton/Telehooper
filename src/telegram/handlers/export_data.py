# coding: utf-8

import asyncio
import json

from aiogram import Router
from aiogram.types import BufferedInputFile, Message

import utils
from api import CommandWithDeepLink, TelehooperAPI, TelehooperUser
from DB import get_group


router = Router()

async def get_user_data(user: TelehooperUser) -> bytes:
	"""
	–°–æ–∑–¥–∞—ë—Ç `.json`-—Ñ–∞–π–ª —Å —ç–∫—Å–ø–æ—Ä—Ç–æ–º –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.

	:param user: –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telehooper, –æ –∫–æ—Ç–æ—Ä–æ–º –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–∑–≤–ª–µ—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.
	"""

	# –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
	output_dict = {
		f"user_{user.telegramUser.id}": user.document.json
	}

	# –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤—Å–µ—Ö –≥—Ä—É–ø–ø–∞—Ö, —Å –∫–æ—Ç–æ—Ä—ã–º —Å–≤—è–∑–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
	for group_id in user.document["Groups"]:
		group = await get_group(group_id)

		assert group, f"–ì—Ä—É–ø–ø–∞ {group_id} –∏–º–µ–µ—Ç –∑–∞–ø–∏—Å—å –≤ –ë–î —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ–¥–Ω–∞–∫–æ —Å–∞–º–∞ –≥—Ä—É–ø–ø–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

		output_dict[f"group_{group_id}"] = group.json

	return (
		f"// –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞ Telehooper user_{user.telegramUser.id}.\n"
		f"// –ó–∞–ø—Ä–æ—Å –Ω–∞ —ç–∫—Å–ø–æ—Ä—Ç –±—ã–ª –ø—Ä–æ–∏–∑–≤–µ–¥—ë–Ω –≤ {utils.get_timestamp()} (UNIX timestamp).\n"
		"//"
		"// –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∏ —Å –∫–µ–º –Ω–µ –¥–µ–ª–∏—Ç–µ—Å—å –¥–∞–Ω–Ω—ã–º —Ñ–∞–π–ª–æ–º, –ø–æ—Å–∫–æ–ª—å–∫—É –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ –í—ã —Ä–∏—Å–∫—É–µ—Ç–µ —Å–≤–æ–∏–º–∏ –ª–∏—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!\n"
		"\n"
		f"{json.dumps(output_dict, indent=4, ensure_ascii=False)}"
	).encode("utf-8")

@router.message(CommandWithDeepLink("export_data", "dump_my_data"))
async def export_data_command_handler(msg: Message) -> None:
	"""
	Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/export_data`.
	"""

	if not msg.from_user:
		return

	if msg.chat.type != "private":
		await msg.reply(
			"<b>‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã</b>.\n"
			"\n"
			"–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º.",
			allow_sending_without_reply=True
		)

		return

	user = await TelehooperAPI.get_user(msg.from_user)

	answer = await msg.answer_document(
		document=BufferedInputFile(
			file=await get_user_data(user),
			filename=f"–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö Telehooper –¥–ª—è user_{msg.from_user.id}.json"
		),
		caption=(
			"<b>üóÇ  –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</b>.\n"
			"\n"
			"–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–∏–π <code>.json</code>-—Ñ–∞–π–ª. –†–∞—Å–ø—Ä—è–≥–∞–π—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∫–∞–∫ –í–∞–º —É–≥–æ–¥–Ω–æ.\n"
			"–î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º <code>.json</code>-—Ñ–∞–π–ª–æ–≤ –ª–∏–±–æ –ª—é–±—ã–º IDE.\n"
			"\n"
			"<b><u>‚ö†Ô∏è –ù–ò–ö–û–ú–£ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ñ–∞–π–ª! ‚ö†Ô∏è</u></b>\n"
			"–û—Ç–ø—Ä–∞–≤–∏–≤ —ç—Ç–æ—Ç —Ñ–∞–π–ª —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º, –í—ã –ø–æ–¥—Å—Ç–∞–≤–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç—å —Å–≤–æ–∏—Ö –∂–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥ —Ä–∏—Å–∫. –î–ª—è –í–∞—à–µ–π –∂–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏."
		),
		protect_content=True
	)

	await asyncio.sleep(60)
	try:
		await answer.delete()
	except:
		pass
