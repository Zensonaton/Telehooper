# coding: utf-8

from aiogram import F, Router
from aiogram.types import CallbackQuery, ErrorEvent, Message
from loguru import logger

import utils


router = Router()

@router.errors(F.update.message.as_("msg"))
async def message_error_handler(event: ErrorEvent, msg: Message) -> None:
	"""
	Error Handler –¥–ª—è —Å–ª—É—á–∞–µ–≤ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏.
	"""

	logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {utils.get_telegram_logging_info(msg.from_user)}:", event.exception)

	await msg.answer(
		"<b>‚ö†Ô∏è –£ –±–æ—Ç–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b>.\n"
		"\n"
		"<i><b>–£–ø—Å!</b></i> –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∏ –±–æ—Ç —Å—Ç–æ–ª–∫–Ω—É–ª—Å—è —Å –æ—à–∏–±–∫–æ–π. üòì\n"
		"\n"
		"<b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –í–∞—Å –ø–æ–ø—Ä–æ—Å–∏–ª–∏ –µ–≥–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å</b>:\n"
		f"<code>{event.exception.__class__.__name__}: {event.exception}</code>.\n"
		"\n"
		"‚ÑπÔ∏è –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è. –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç—Å—è, —Ç–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –±–æ—Ç–∞: <code>/faq 6</code>."
	)

@router.errors(F.update.callback_query.as_("query"))
async def callback_query_error_handler(event: ErrorEvent, query: CallbackQuery) -> None:
	"""
	Error Handler –¥–ª—è —Å–ª—É—á–∞–µ–≤ —Å Inline Callback Query.
	"""

	logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback query –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {utils.get_telegram_logging_info(query.from_user)}:", event.exception)

	await query.answer(
		"‚ö†Ô∏è –û—à–∏–±–∫–∞\n"
		"\n"
		"–£ –±–æ—Ç–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n"
		f"{event.exception.__class__.__name__}: {event.exception}\n"
		"\n"
		"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", show_alert=True
	)
