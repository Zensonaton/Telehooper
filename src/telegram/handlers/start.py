# coding: utf-8

from aiogram import Bot as BotT
from aiogram import Router as RouterT
from aiogram import types
from aiogram.filters import Command

from consts import CommandButtons


Bot: BotT = None # type: ignore
Router = RouterT()

def init(bot: BotT) -> RouterT:
	"""
	–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ Handler'—ã –∏–∑ —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è.
	"""

	global Bot


	Bot = bot

	return Router

@Router.message(Command("start"))
async def start_handler(msg: types.Message) -> None:
	"""
	Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start.
	"""

	kbd_buttons = [
		types.KeyboardButton(text=CommandButtons.CONNECT),
		types.KeyboardButton(text=CommandButtons.ME),
		types.KeyboardButton(text=CommandButtons.SETTINGS),
		types.KeyboardButton(text=CommandButtons.HELP)
	]
	message_text = (
		"<b>–ü—Ä–∏–≤–µ—Ç! üôã</b>\n"
		"\n"
		"–Ø ‚Äî –±–æ—Ç —Å <a href=\"https://github.com/Zensonaton/Telehooper\">–æ—Ç–∫—Ä—ã—Ç—ã–º –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º</a>, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏ –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –Ω–∞–ø—Ä—è–º—É—é –≤ Telegram. ü§ñ\n"
		"\n"
		"–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞:\n"
		" ‚Ä¢ /connect ‚Äî –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –∫ –±–æ—Ç—É.\n"
		" ‚Ä¢ /me ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ.\n"
		" ‚Ä¢ /settings ‚Äî –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫.\n"
		" ‚Ä¢ /info ‚Äî –ø–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ.\n"
		"\n"
		"‚ÑπÔ∏è –í—ã –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç–µ —Å —á–µ–≥–æ –Ω—É–∂–Ω–æ –Ω–∞—á–∞—Ç—å? –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Å–≤–æ–∏–º –ª–∏—á–Ω—ã–º –ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª–µ–º, –∫–æ–º–∞–Ω–¥–æ–π /info."
	)

	if msg.chat.type in ["group", "supergroup"]:
		kbd_buttons.append(
			types.KeyboardButton(text=CommandButtons.THIS)
		)
		message_text = (
			"<b>üîç –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –≤ –≥—Ä—É–ø–ø–µ</b>.\n"
			"\n"
			"–í—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –∫–æ–º–∞–Ω–¥–æ–π <code>/start</code> –≤ –≥—Ä—É–ø–ø–µ. –í –≥—Ä—É–ø–ø–∞—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n"
			" ‚Ä¢ /this ‚Äî –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–π –≥—Ä—É–ø–ø—ã –≤ —Å–µ—Ä–≤–∏—Å-–≥—Ä—É–ø–ø—É.\n"
			"\n"
			"‚ÑπÔ∏è –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –≥–¥–µ –æ–Ω–∞ –±—ã–ª–∞ –ø—Ä–æ–ø–∏—Å–∞–Ω–∞. –ù–µ –ø–æ–Ω–∏–º–∞–µ—Ç–µ —á—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ? –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /info."
		)
	elif msg.chat.type in "channel":
		# TODO: –°–¥–µ–ª–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –∫–∞–Ω–∞–ª–æ–≤.

		raise Exception("–ö–∞–Ω–∞–ª—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç!")

	keyboard = types.ReplyKeyboardMarkup(
		keyboard=[
			kbd_buttons
		],
		resize_keyboard=True,
		is_persistent=msg.chat.type == "private"
	)

	await msg.answer(
		message_text,
		disable_web_page_preview=True,
		reply_markup=keyboard
	)
