# coding: utf-8

import asyncio

from aiogram import F, Router
from aiogram.filters import Command, Text
from aiogram.types import CallbackQuery, Message
from loguru import logger

from api import (TelehooperSubGroup, TelehooperUser, get_mediagroup,
                 get_subgroup)


_priority_ = -1
"""–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∏."""

router = Router()
router.message.filter(F.chat.type.in_(["group", "supergroup"]))

@router.message(Command("delete", "del", "d"), get_subgroup)
async def delete_command_handler(msg: Message, subgroup: TelehooperSubGroup, user: TelehooperUser) -> None:
	"""
	Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/delete`.
	"""

	if not msg.reply_to_message:
		await msg.reply(
			"<b>‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è</b>.\n"
			"\n"
			"–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ <b>–æ—Ç–≤–µ—Ç–∏—Ç—å</b> –Ω–∞ –Ω–µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π <code>/delete</code>.\n"
			"¬´–û—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ¬ª ‚Äî —Ç–æ, —á—Ç–æ —Å–¥–µ–ª–∞–ª —è —Å –í–∞—à–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º. üôÉ",
			allow_sending_without_reply=True
		)

		return

	await subgroup.handle_telegram_message_delete(msg.reply_to_message, user)

	# –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ (–∫–æ–º–∞–Ω–¥—É), –µ—Å–ª–∏ —ç—Ç–æ–≥–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∞.
	if await user.get_setting(f"Services.{subgroup.service.service_name}.CleanupAfterUse"):
		await asyncio.sleep(1)

		try:
			await msg.delete()
		except:
			pass

@router.message(Command("read", "r", "mark", "mark_as_read"), get_subgroup)
async def read_command_handler(msg: Message, subgroup: TelehooperSubGroup, user: TelehooperUser) -> None:
	"""
	Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/read`.
	"""

	await subgroup.handle_telegram_message_read(user)

	# –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ (–∫–æ–º–∞–Ω–¥—É), –µ—Å–ª–∏ —ç—Ç–æ–≥–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∞.
	if await user.get_setting(f"Services.{subgroup.service.service_name}.CleanupAfterUse"):
		await asyncio.sleep(1)

		try:
			await msg.delete()
		except:
			pass

@router.edited_message(get_subgroup)
async def on_message_edit(msg: Message, subgroup: TelehooperSubGroup, user: TelehooperUser) -> None:
	"""
	Handler –¥–ª—è —Å–ª—É—á–∞—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ-–¥–∏–∞–ª–æ–≥–µ (–∏–ª–∏ —Ç–æ–ø–∏–∫-–¥–∏–∞–ª–æ–≥–µ).
	"""

	await subgroup.handle_telegram_message_edit(msg, user)

@router.message(get_mediagroup, get_subgroup)
async def on_group_message(msg: Message, subgroup: TelehooperSubGroup, user: TelehooperUser, mediagroup: list) -> None:
	"""
	Handler –¥–ª—è —Å–ª—É—á–∞—è, –µ—Å–ª–∏ –±–æ—Ç –ø–æ–ª—É—á–∏–ª –≤ –≥—Ä—É–ø–ø–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–∏–∞–ª–æ–≥ –≤ —Å–µ—Ä–≤–∏—Å–µ.
	"""

	await subgroup.handle_telegram_message(msg, user, mediagroup)

@router.callback_query(Text(startswith="service-clbck:"), get_subgroup)
async def service_inline_callback_handler(query: CallbackQuery, subgroup: TelehooperSubGroup, user: TelehooperUser) -> None:
	"""
	Inline Callback Handler –¥–ª—è —Å–ª—É—á–∞—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞ Inline Callback –∫–Ω–æ–ø–∫—É –∏–∑ —Å–µ—Ä–≤–∏—Å–∞.
	"""

	await subgroup.handle_telegram_callback_button(query, user)
