# coding: utf-8

import asyncio
from typing import cast

from aiogram import F, Router
from aiogram.filters import Command
from aiogram.types import Audio, Document, Message, PhotoSize, User, Video
from loguru import logger

from api import (TelehooperAPI, TelehooperGroup, TelehooperSubGroup,
                 TelehooperUser)


_priority_ = -1
"""–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∏."""

router = Router()
router.message.filter(F.chat.type.in_(["group", "supergroup"]))

async def get_subgroup(msg: Message) -> dict | None:
	"""
	–§–∏–ª—å—Ç—Ä –¥–ª—è –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø–µ. –ï—Å–ª–∏ –¥–∞–Ω–Ω–∞—è –≥—Ä—É–ø–ø–∞ —è–≤–ª—è–µ—Ç—Å—è –¥–∏–∞–ª–æ–≥-–≥—Ä—É–ø–ø–æ–π, —Ç–æ –¥–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –≤–µ—Ä–Ω—ë—Ç –æ–±—ä–µ–∫—Ç TelehooperSubGroup.
	"""

	# –ü–æ–Ω—è—Ç–∏—è –Ω–µ –∏–º–µ—é –∫–∞–∫, –Ω–æ –±–æ—Ç –ø–æ–ª—É—á–∞–ª —Å–≤–æ–∏ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¥–∞–Ω–Ω–æ–º —Ö—ç–Ω–¥–ª–µ—Ä–µ.
	if msg.from_user and msg.from_user.is_bot:
		return None

	telehooper_user = await TelehooperAPI.get_user(cast(User, msg.from_user))
	telehooper_group = await TelehooperAPI.get_group(telehooper_user, msg.chat)

	if not telehooper_group:
		return None

	telehooper_group = cast(TelehooperGroup, telehooper_group)

	topic_id = msg.message_thread_id or 0

	# Telegram –≤ msg.message_thread_id –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª –æ—Ç–≤–µ—Ç.
	# –≠—Ç–æ –ª–æ–º–∞–µ—Ç –≤—Å–µ–≥–æ –±–æ—Ç–∞, –ø–æ—ç—Ç–æ–º—É –Ω–∞–º –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –∫–æ—Å—Ç—ã–ª–∏—Ç—å.
	if not msg.is_topic_message:
		topic_id = 0

	subgroup = TelehooperAPI.get_subgroup_by_chat(telehooper_group, topic_id)

	if not subgroup:
		return None

	return {"subgroup": subgroup, "user": telehooper_user}

@router.message(Command("delete", "del", "d"), get_subgroup)
async def delete_command_handler(msg: Message, subgroup: TelehooperSubGroup, user: TelehooperUser) -> None:
	"""
	Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/delete`.
	"""

	if not msg.reply_to_message:
		await msg.reply(
			"<b>‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è</b>.\n"
			"\n"
			"–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ <b>–æ—Ç–≤–µ—Ç–∏—Ç—å</b> –Ω–∞ –Ω–µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π <code>/delete</code>.\n"
			"¬´–û—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ¬ª ‚Äî —Ç–æ, —á—Ç–æ —Å–¥–µ–ª–∞–ª —è —Å –í–∞—à–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º. üôÉ",
			allow_sending_without_reply=True
		)

		return

	await subgroup.service.handle_message_delete(msg.reply_to_message, subgroup)

	# –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ (–∫–æ–º–∞–Ω–¥—É), –µ—Å–ª–∏ —ç—Ç–æ–≥–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∞.
	if await user.get_setting(f"Services.{subgroup.service.service_name}.CleanupAfterUse"):
		await asyncio.sleep(1)

		try:
			await msg.delete()
		except:
			pass

@router.message(Command("read", "r", "mark", "mark_as_read"), get_subgroup)
async def read_command_handler(msg: Message, subgroup: TelehooperSubGroup, user: TelehooperUser) -> None:
	"""
	Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `/read`.
	"""

	await subgroup.service.handle_message_read(subgroup)

	# –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ (–∫–æ–º–∞–Ω–¥—É), –µ—Å–ª–∏ —ç—Ç–æ–≥–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∞.
	if await user.get_setting(f"Services.{subgroup.service.service_name}.CleanupAfterUse"):
		await asyncio.sleep(1)

		try:
			await msg.delete()
		except:
			pass

@router.edited_message(get_subgroup)
async def on_message_edit(msg: Message, subgroup: TelehooperSubGroup) -> None:
	"""
	Handler –¥–ª—è —Å–ª—É—á–∞—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ-–¥–∏–∞–ª–æ–≥–µ (–∏–ª–∏ —Ç–æ–ø–∏–∫-–¥–∏–∞–ª–æ–≥–µ).
	"""

	await subgroup.service.handle_message_edit(msg, subgroup)

@router.message(get_subgroup)
async def on_group_message(msg: Message, subgroup: TelehooperSubGroup) -> None:
	"""
	Handler –¥–ª—è —Å–ª—É—á–∞—è, –µ—Å–ª–∏ –±–æ—Ç –ø–æ–ª—É—á–∏–ª –≤ –≥—Ä—É–ø–ø–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–∏–∞–ª–æ–≥ –≤ —Å–µ—Ä–≤–∏—Å–µ.
	"""

	await subgroup.service.handle_inner_message(msg, subgroup, [])
