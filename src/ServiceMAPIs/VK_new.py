# coding: utf-8

from __future__ import annotations

from typing import TYPE_CHECKING
import vkbottle

from .Base import baseTelehooperAPI

if TYPE_CHECKING:
	from TelegramBot import Telehooper, TelehooperUser

class VKTelehooperAPI(baseTelehooperAPI):
	"""
	API –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.
	"""

	def __init__(self, telehooper_bot: "Telehooper") -> None:
		super().__init__(telehooper_bot)

		available = True
		serviceCodename = "vk"
		serviceName = "–í–ö–æ–Ω—Ç–∞–∫—Ç–µ"

	async def connect(self, user: "TelehooperUser", token: str):
		await super().connect(user)

		# –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –í–ö.

		try:
			print("connection")
			vkAccount = vkbottle.API(token)
		except:
			print("–û–®–ë–´–ö–ê")

		return


		space = "&#12288;" # –°–∏–º–≤–æ–ª –ø—Ä–æ–±–µ–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —É–¥–∞–ª—è–µ—Ç—Å—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.
		userInfoData = f"{space}‚Ä¢ –ò–º—è: {user.TGUser.first_name}"

		if user.TGUser.last_name:
			userInfoData += " {self.telegramUser.last_name}"
		userInfoData += ".\n"

		if user.TGUser.username:
			userInfoData += f"{space}‚Ä¢ –ù–∏–∫–Ω–µ–π–º –≤ Telegram: {user.TGUser.username}.\n"
			userInfoData += f"{space}‚Ä¢ –°—Å—ã–ª–∫–∞: https://t.me/{user.TGUser.username}‚Äã.\n"

		userInfoData += f"{space}‚Ä¢ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –±—ã–ª–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ —á–µ—Ä–µ–∑ " + ("–ø–∞—Ä–æ–ª—å" if False else f"VK ID") + ".\n"


		await self.vkAPI.messages.send(self.vkFullUser.id, random_id=generateVKRandomID(), message=f"""‚ö†Ô∏è –í–ê–ñ–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø ‚ö†Ô∏è {space * 15}
–ü—Ä–∏–≤–µ—Ç! üôã
–ï—Å–ª–∏ —Ç—ã –≤–∏–¥–∏—à—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–æ –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ Telegram-–±–æ—Ç –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º ¬´Telehooper¬ª –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á—ë–Ω –∫ —Ç–≤–æ–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ —Å—É–º–µ–µ—Ç –¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ:
{space}‚Ä¢ –ß–∏—Ç–∞—Ç—å –≤—Å–µ –ø–æ–ª—É—á–∞–µ–º—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
{space}‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.
{space}‚Ä¢ –°–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–∏–∞–ª–æ–≥–æ–≤.
{space}‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π, –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏–º —Å–æ–æ–±—â–µ–Ω–∏—è.
‚ö† –ï—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–∞–ª –±–æ—Ç–∞ –Ω–µ —Ç—ã, —Ç–æ —Å—Ä–æ—á–Ω–æ {"–≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π (https://vk.com/settings?act=apps) –æ—Ç–∫–ª—é—á–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ¬´Kate Mobile¬ª, –ª–∏–±–æ –∂–µ " if self.authViaPassword else "–Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö ¬´–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏¬ª (https://vk.com/settings?act=security) –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–û—Ç–∫–ª—é—á–∏—Ç—å –≤—Å–µ —Å–µ–∞–Ω—Å—ã¬ª, –ª–∏–±–æ –∂–µ "}–≤ —ç—Ç–æ—Ç –∂–µ –¥–∏–∞–ª–æ–≥ –ø—Ä–æ–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É ¬´logoff¬ª, (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫) –∏ –µ—Å–ª–∏ –∂–µ —Ç—É—Ç –ø–æ—è–≤–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —É—Å–ø–µ—à–Ω–æ–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏, —Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –±–æ—Ç –±—ã–ª –æ—Ç–∫–ª—é—á—ë–Ω. –ü–æ—Å–ª–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —Å—Ä–æ—á–Ω–æ –º–µ–Ω—è–π –ø–∞—Ä–æ–ª—å –æ—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ, –ø–æ—Å–∫–æ–ª—å–∫—É –ø—Ä–æ–∏–∑–æ—à–µ–¥—à–µ–µ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –∫—Ç–æ-—Ç–æ —Å—É–º–µ–ª –≤–æ–π—Ç–∏ –≤ —Ç–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ, –ª–∏–±–æ –∂–µ —Ç—ã –∑–∞–±—ã–ª –≤—ã–π—Ç–∏ —Å —á—É–∂–æ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞!
–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–∫–ª—é—á–∏–ª –±–æ—Ç–∞ –∫ —Ç–≤–æ–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ:
{userInfoData}
–ï—Å–ª–∏ –∂–µ —ç—Ç–æ –±—ã–ª —Ç—ã, —Ç–æ –≤–æ–ª–Ω–æ–≤–∞—Ç—å—Å—è –Ω–µ–∑–∞—á–µ–º, –∏ —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Å—é –ø—Ä–µ–¥—ã–¥—É—â—É—é —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.
‚ÑπÔ∏è –í —ç—Ç–æ–º –¥–∏–∞–ª–æ–≥–µ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Telehooper'–æ–º; –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –±–µ–∑ ¬´–∫–∞–≤—ã—á–µ–∫¬ª:
{space}‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø–æ–¥–∫–ª—é—á—ë–Ω –ª–∏ Telehooper: ¬´test¬ª.
{space}‚Ä¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram: ¬´ping¬ª.
{space}‚Ä¢ –û—Ç–∫–ª—é—á–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –æ—Ç Telehooper: ¬´logoff¬ª.""")

		# –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–ø–æ–≤–µ—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –í–ö-–≥—Ä—É–ø–ø—É:
		try:
			notifier_group_id = abs(int(os.environ["VKBOT_NOTIFIER_ID"]))

			if notifier_group_id > 0:
				await self.vkAPI.messages.send(-notifier_group_id, generateVKRandomID(), message="(—ç—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–µ –æ–±—Ä–∞—â–∞–π –Ω–∞ –Ω–µ–≥–æ –≤–Ω–∏–º–∞–Ω–∏–µ.)\n\ntelehooperSuccessAuth")
		except:
			logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞ –≤ –í–ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É \"VKBOT_NOTIFIER_ID\" –≤ .env —Ñ–∞–π–ª–µ. (—Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {os.environ.get('VKBOT_NOTIFIER_ID')})")

		# –ü–æ–ª—É—á–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:
		DB = getDefaultCollection()

		# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:
		DB.update_one(
			{
				"_id": user.TGUser.id
			},
			{"$set": {
				"_id": user.TGUser.id,
				"TelegramUserID": user.TGUser.id,
				"IsAwareOfDialogueConversionConditions": False,
				"Services": {
					"VK": {
						"Auth": True,
						"IsAuthViaPassword": self.authViaPassword,
						"AuthDate": datetime.datetime.now(),
						"Token": self.vkToken,
						"ID": self.vkFullUser.id,
						"DownloadImage": await vkbottle.PhotoMessageUploader(self.vkAPI).upload("downloadImage.png"),
						"ServiceToTelegramMIDs": []
					}
				}
			}},
			upsert=True
		)

	async def getDefaultDownloadingImage(self) -> None | str:
		"""
		–í—ã–¥–∞—ë—Ç —Å—Ç—Ä–æ–∫—É –≤–∏–¥–∞ "photo123_456" –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ attachment –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏.
		"""

		DB = getDefaultCollection()
		res = DB.find_one({"_id": user.TGUser.id})
		if res:
			vkService = res["Services"]["VK"]
			if not vkService.get("DownloadImage"):
				vkService["DownloadImage"] = await vkbottle.PhotoMessageUploader(self.vkAPI).upload("downloadImage.png")
				DB.update_one({"_id": user.TGUser.id}, {"$set": {"Services.VK.DownloadImage": vkService["DownloadImage"]}})

			return vkService["DownloadImage"]

		return None
