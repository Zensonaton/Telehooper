# coding: utf-8

"""Handler –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `VKLogin`."""

import logging

import Consts
import MiddleAPI
import vkbottle
from aiogram import Bot, Dispatcher
from aiogram.types import Message as MessageType

BOT: Bot = None  # type: ignore
logger = logging.getLogger(__name__)

def _setupCHandler(dp: Dispatcher, bot: Bot):
	"""
	–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—É `VKLogin`.
	"""

	global BOT

	BOT = bot
	dp.register_message_handler(VKLogin, commands=["vklogin"])


async def VKLogin(msg: MessageType):
	args = (msg.get_args() or "").split(" ")

	if len(args) != 2:
		await msg.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: <code>/vklogin –ª–æ–≥–∏–Ω –ø–∞—Ä–æ–ª—å</code>.")

		return


	await msg.delete()
	await msg.answer("–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –î–∞–π –º–Ω–µ –≤—Ä–µ–º—è, –º–Ω–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ... ‚è≥\n\n<i>(—Ç–≤–æ—ë –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ –≤ —Ü–µ–ª—è—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ üëÄ)</i>")


	vkaccount: MiddleAPI.VKAccount
	try:
		vkToken = vkbottle.UserAuth(
			Consts.officialVKAppCreds.VK_ME.clientID,
			Consts.officialVKAppCreds.VK_ME.clientSecret
		)
		vkToken = await vkToken.get_token(
			args[0],
			args[1]
		)

		vkaccount = MiddleAPI.VKAccount(vkToken, msg.from_user, True)

		# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞...
		await vkaccount.postAuthInit()

		pass
	except Exception as error:
		logger.error(error)

		await msg.answer("–û—à–∏–±–∫–∞")


		

	
	
